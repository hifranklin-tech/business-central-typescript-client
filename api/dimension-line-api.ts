/* tslint:disable */
/* eslint-disable */
/**
 * (v1.0) Dynamics 365 Business Central
 * (v1.0) Business Central Standard APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// URLSearchParams not necessarily used
// @ts-ignore
import { URL, URLSearchParams } from 'url';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, type RequestArgs, BaseAPI, RequiredError, operationServerMap } from '../base';
// @ts-ignore
import type { DimensionLine } from '../model';
// @ts-ignore
import type { ListDimensionLines200Response } from '../model';
// @ts-ignore
import type { PostDimensionLineRequest } from '../model';
/**
 * DimensionLineApi - axios parameter creator
 * @export
 */
export const DimensionLineApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * 
         * @summary Deletes an object of type dimensionLine in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} dimensionLineParentId (v1.0) parentId for dimensionLine
         * @param {string} dimensionLineId (v1.0) id for dimensionLine
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteDimensionLine: async (companyId: string, dimensionLineParentId: string, dimensionLineId: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('deleteDimensionLine', 'companyId', companyId)
            // verify required parameter 'dimensionLineParentId' is not null or undefined
            assertParamExists('deleteDimensionLine', 'dimensionLineParentId', dimensionLineParentId)
            // verify required parameter 'dimensionLineId' is not null or undefined
            assertParamExists('deleteDimensionLine', 'dimensionLineId', dimensionLineId)
            const localVarPath = `/companies({company_id})/dimensionLines({dimensionLine_parentId},{dimensionLine_id})`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"dimensionLine_parentId"}}`, encodeURIComponent(String(dimensionLineParentId)))
                .replace(`{${"dimensionLine_id"}}`, encodeURIComponent(String(dimensionLineId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Retrieve the properties and relationships of an object of type dimensionLine for Dynamics 365 Business Central.
         * @param {string} companyId (v1.0) id for company
         * @param {string} dimensionLineParentId (v1.0) parentId for dimensionLine
         * @param {string} dimensionLineId (v1.0) id for dimensionLine
         * @param {Array<GetDimensionLineExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<GetDimensionLineSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDimensionLine: async (companyId: string, dimensionLineParentId: string, dimensionLineId: string, $expand?: Array<GetDimensionLineExpandEnum>, $select?: Array<GetDimensionLineSelectEnum>, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('getDimensionLine', 'companyId', companyId)
            // verify required parameter 'dimensionLineParentId' is not null or undefined
            assertParamExists('getDimensionLine', 'dimensionLineParentId', dimensionLineParentId)
            // verify required parameter 'dimensionLineId' is not null or undefined
            assertParamExists('getDimensionLine', 'dimensionLineId', dimensionLineId)
            const localVarPath = `/companies({company_id})/dimensionLines({dimensionLine_parentId},{dimensionLine_id})`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"dimensionLine_parentId"}}`, encodeURIComponent(String(dimensionLineParentId)))
                .replace(`{${"dimensionLine_id"}}`, encodeURIComponent(String(dimensionLineId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if ($expand) {
                localVarQueryParameter['$expand'] = $expand.join(COLLECTION_FORMATS.csv);
            }

            if ($select) {
                localVarQueryParameter['$select'] = $select.join(COLLECTION_FORMATS.csv);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Returns a list of dimensionLines
         * @param {string} companyId (v1.0) id for company
         * @param {number} [$top] (v1.0) Number of items to return from the top of the list
         * @param {number} [$skip] (v1.0) Number of items to skip from the list
         * @param {number} [$limit] (v1.0) Number of items to return from the list
         * @param {string} [$filter] (v1.0) Filtering expression
         * @param {Array<ListDimensionLinesExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<ListDimensionLinesSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listDimensionLines: async (companyId: string, $top?: number, $skip?: number, $limit?: number, $filter?: string, $expand?: Array<ListDimensionLinesExpandEnum>, $select?: Array<ListDimensionLinesSelectEnum>, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('listDimensionLines', 'companyId', companyId)
            const localVarPath = `/companies({company_id})/dimensionLines`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if ($top !== undefined) {
                localVarQueryParameter['$top'] = $top;
            }

            if ($skip !== undefined) {
                localVarQueryParameter['$skip'] = $skip;
            }

            if ($limit !== undefined) {
                localVarQueryParameter['$limit'] = $limit;
            }

            if ($filter !== undefined) {
                localVarQueryParameter['$filter'] = $filter;
            }

            if ($expand) {
                localVarQueryParameter['$expand'] = $expand.join(COLLECTION_FORMATS.csv);
            }

            if ($select) {
                localVarQueryParameter['$select'] = $select.join(COLLECTION_FORMATS.csv);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Updates an object of type dimensionLine in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} dimensionLineParentId (v1.0) parentId for dimensionLine
         * @param {string} dimensionLineId (v1.0) id for dimensionLine
         * @param {string} contentType (v1.0) application/json
         * @param {string} ifMatch (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
         * @param {PostDimensionLineRequest} postDimensionLineRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchDimensionLine: async (companyId: string, dimensionLineParentId: string, dimensionLineId: string, contentType: string, ifMatch: string, postDimensionLineRequest: PostDimensionLineRequest, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('patchDimensionLine', 'companyId', companyId)
            // verify required parameter 'dimensionLineParentId' is not null or undefined
            assertParamExists('patchDimensionLine', 'dimensionLineParentId', dimensionLineParentId)
            // verify required parameter 'dimensionLineId' is not null or undefined
            assertParamExists('patchDimensionLine', 'dimensionLineId', dimensionLineId)
            // verify required parameter 'contentType' is not null or undefined
            assertParamExists('patchDimensionLine', 'contentType', contentType)
            // verify required parameter 'ifMatch' is not null or undefined
            assertParamExists('patchDimensionLine', 'ifMatch', ifMatch)
            // verify required parameter 'postDimensionLineRequest' is not null or undefined
            assertParamExists('patchDimensionLine', 'postDimensionLineRequest', postDimensionLineRequest)
            const localVarPath = `/companies({company_id})/dimensionLines({dimensionLine_parentId},{dimensionLine_id})`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"dimensionLine_parentId"}}`, encodeURIComponent(String(dimensionLineParentId)))
                .replace(`{${"dimensionLine_id"}}`, encodeURIComponent(String(dimensionLineId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if (contentType != null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }

            if (ifMatch != null) {
                localVarHeaderParameter['If-Match'] = String(ifMatch);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(postDimensionLineRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Creates an object of type dimensionLine in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} contentType (v1.0) application/json
         * @param {PostDimensionLineRequest} postDimensionLineRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postDimensionLine: async (companyId: string, contentType: string, postDimensionLineRequest: PostDimensionLineRequest, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('postDimensionLine', 'companyId', companyId)
            // verify required parameter 'contentType' is not null or undefined
            assertParamExists('postDimensionLine', 'contentType', contentType)
            // verify required parameter 'postDimensionLineRequest' is not null or undefined
            assertParamExists('postDimensionLine', 'postDimensionLineRequest', postDimensionLineRequest)
            const localVarPath = `/companies({company_id})/dimensionLines`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if (contentType != null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(postDimensionLineRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * DimensionLineApi - functional programming interface
 * @export
 */
export const DimensionLineApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = DimensionLineApiAxiosParamCreator(configuration)
    return {
        /**
         * 
         * @summary Deletes an object of type dimensionLine in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} dimensionLineParentId (v1.0) parentId for dimensionLine
         * @param {string} dimensionLineId (v1.0) id for dimensionLine
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteDimensionLine(companyId: string, dimensionLineParentId: string, dimensionLineId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteDimensionLine(companyId, dimensionLineParentId, dimensionLineId, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DimensionLineApi.deleteDimensionLine']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Retrieve the properties and relationships of an object of type dimensionLine for Dynamics 365 Business Central.
         * @param {string} companyId (v1.0) id for company
         * @param {string} dimensionLineParentId (v1.0) parentId for dimensionLine
         * @param {string} dimensionLineId (v1.0) id for dimensionLine
         * @param {Array<GetDimensionLineExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<GetDimensionLineSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getDimensionLine(companyId: string, dimensionLineParentId: string, dimensionLineId: string, $expand?: Array<GetDimensionLineExpandEnum>, $select?: Array<GetDimensionLineSelectEnum>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DimensionLine>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getDimensionLine(companyId, dimensionLineParentId, dimensionLineId, $expand, $select, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DimensionLineApi.getDimensionLine']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Returns a list of dimensionLines
         * @param {string} companyId (v1.0) id for company
         * @param {number} [$top] (v1.0) Number of items to return from the top of the list
         * @param {number} [$skip] (v1.0) Number of items to skip from the list
         * @param {number} [$limit] (v1.0) Number of items to return from the list
         * @param {string} [$filter] (v1.0) Filtering expression
         * @param {Array<ListDimensionLinesExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<ListDimensionLinesSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listDimensionLines(companyId: string, $top?: number, $skip?: number, $limit?: number, $filter?: string, $expand?: Array<ListDimensionLinesExpandEnum>, $select?: Array<ListDimensionLinesSelectEnum>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListDimensionLines200Response>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listDimensionLines(companyId, $top, $skip, $limit, $filter, $expand, $select, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DimensionLineApi.listDimensionLines']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Updates an object of type dimensionLine in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} dimensionLineParentId (v1.0) parentId for dimensionLine
         * @param {string} dimensionLineId (v1.0) id for dimensionLine
         * @param {string} contentType (v1.0) application/json
         * @param {string} ifMatch (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
         * @param {PostDimensionLineRequest} postDimensionLineRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async patchDimensionLine(companyId: string, dimensionLineParentId: string, dimensionLineId: string, contentType: string, ifMatch: string, postDimensionLineRequest: PostDimensionLineRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DimensionLine>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.patchDimensionLine(companyId, dimensionLineParentId, dimensionLineId, contentType, ifMatch, postDimensionLineRequest, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DimensionLineApi.patchDimensionLine']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Creates an object of type dimensionLine in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} contentType (v1.0) application/json
         * @param {PostDimensionLineRequest} postDimensionLineRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async postDimensionLine(companyId: string, contentType: string, postDimensionLineRequest: PostDimensionLineRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DimensionLine>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.postDimensionLine(companyId, contentType, postDimensionLineRequest, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DimensionLineApi.postDimensionLine']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
    }
};

/**
 * DimensionLineApi - factory interface
 * @export
 */
export const DimensionLineApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = DimensionLineApiFp(configuration)
    return {
        /**
         * 
         * @summary Deletes an object of type dimensionLine in Dynamics 365 Business Central
         * @param {DimensionLineApiDeleteDimensionLineRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteDimensionLine(requestParameters: DimensionLineApiDeleteDimensionLineRequest, options?: RawAxiosRequestConfig): AxiosPromise<void> {
            return localVarFp.deleteDimensionLine(requestParameters.companyId, requestParameters.dimensionLineParentId, requestParameters.dimensionLineId, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Retrieve the properties and relationships of an object of type dimensionLine for Dynamics 365 Business Central.
         * @param {DimensionLineApiGetDimensionLineRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDimensionLine(requestParameters: DimensionLineApiGetDimensionLineRequest, options?: RawAxiosRequestConfig): AxiosPromise<DimensionLine> {
            return localVarFp.getDimensionLine(requestParameters.companyId, requestParameters.dimensionLineParentId, requestParameters.dimensionLineId, requestParameters.$expand, requestParameters.$select, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Returns a list of dimensionLines
         * @param {DimensionLineApiListDimensionLinesRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listDimensionLines(requestParameters: DimensionLineApiListDimensionLinesRequest, options?: RawAxiosRequestConfig): AxiosPromise<ListDimensionLines200Response> {
            return localVarFp.listDimensionLines(requestParameters.companyId, requestParameters.$top, requestParameters.$skip, requestParameters.$limit, requestParameters.$filter, requestParameters.$expand, requestParameters.$select, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Updates an object of type dimensionLine in Dynamics 365 Business Central
         * @param {DimensionLineApiPatchDimensionLineRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchDimensionLine(requestParameters: DimensionLineApiPatchDimensionLineRequest, options?: RawAxiosRequestConfig): AxiosPromise<DimensionLine> {
            return localVarFp.patchDimensionLine(requestParameters.companyId, requestParameters.dimensionLineParentId, requestParameters.dimensionLineId, requestParameters.contentType, requestParameters.ifMatch, requestParameters.postDimensionLineRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Creates an object of type dimensionLine in Dynamics 365 Business Central
         * @param {DimensionLineApiPostDimensionLineRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postDimensionLine(requestParameters: DimensionLineApiPostDimensionLineRequest, options?: RawAxiosRequestConfig): AxiosPromise<DimensionLine> {
            return localVarFp.postDimensionLine(requestParameters.companyId, requestParameters.contentType, requestParameters.postDimensionLineRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for deleteDimensionLine operation in DimensionLineApi.
 * @export
 * @interface DimensionLineApiDeleteDimensionLineRequest
 */
export interface DimensionLineApiDeleteDimensionLineRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DimensionLineApiDeleteDimensionLine
     */
    readonly companyId: string

    /**
     * (v1.0) parentId for dimensionLine
     * @type {string}
     * @memberof DimensionLineApiDeleteDimensionLine
     */
    readonly dimensionLineParentId: string

    /**
     * (v1.0) id for dimensionLine
     * @type {string}
     * @memberof DimensionLineApiDeleteDimensionLine
     */
    readonly dimensionLineId: string
}

/**
 * Request parameters for getDimensionLine operation in DimensionLineApi.
 * @export
 * @interface DimensionLineApiGetDimensionLineRequest
 */
export interface DimensionLineApiGetDimensionLineRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DimensionLineApiGetDimensionLine
     */
    readonly companyId: string

    /**
     * (v1.0) parentId for dimensionLine
     * @type {string}
     * @memberof DimensionLineApiGetDimensionLine
     */
    readonly dimensionLineParentId: string

    /**
     * (v1.0) id for dimensionLine
     * @type {string}
     * @memberof DimensionLineApiGetDimensionLine
     */
    readonly dimensionLineId: string

    /**
     * (v1.0) Entities to expand
     * @type {Array<'dimension'>}
     * @memberof DimensionLineApiGetDimensionLine
     */
    readonly $expand?: Array<GetDimensionLineExpandEnum>

    /**
     * (v1.0) Selected properties to be retrieved
     * @type {Array<'parentId' | 'id' | 'code' | 'displayName' | 'valueId' | 'valueCode' | 'valueDisplayName'>}
     * @memberof DimensionLineApiGetDimensionLine
     */
    readonly $select?: Array<GetDimensionLineSelectEnum>
}

/**
 * Request parameters for listDimensionLines operation in DimensionLineApi.
 * @export
 * @interface DimensionLineApiListDimensionLinesRequest
 */
export interface DimensionLineApiListDimensionLinesRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DimensionLineApiListDimensionLines
     */
    readonly companyId: string

    /**
     * (v1.0) Number of items to return from the top of the list
     * @type {number}
     * @memberof DimensionLineApiListDimensionLines
     */
    readonly $top?: number

    /**
     * (v1.0) Number of items to skip from the list
     * @type {number}
     * @memberof DimensionLineApiListDimensionLines
     */
    readonly $skip?: number

    /**
     * (v1.0) Number of items to return from the list
     * @type {number}
     * @memberof DimensionLineApiListDimensionLines
     */
    readonly $limit?: number

    /**
     * (v1.0) Filtering expression
     * @type {string}
     * @memberof DimensionLineApiListDimensionLines
     */
    readonly $filter?: string

    /**
     * (v1.0) Entities to expand
     * @type {Array<'dimension'>}
     * @memberof DimensionLineApiListDimensionLines
     */
    readonly $expand?: Array<ListDimensionLinesExpandEnum>

    /**
     * (v1.0) Selected properties to be retrieved
     * @type {Array<'parentId' | 'id' | 'code' | 'displayName' | 'valueId' | 'valueCode' | 'valueDisplayName'>}
     * @memberof DimensionLineApiListDimensionLines
     */
    readonly $select?: Array<ListDimensionLinesSelectEnum>
}

/**
 * Request parameters for patchDimensionLine operation in DimensionLineApi.
 * @export
 * @interface DimensionLineApiPatchDimensionLineRequest
 */
export interface DimensionLineApiPatchDimensionLineRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DimensionLineApiPatchDimensionLine
     */
    readonly companyId: string

    /**
     * (v1.0) parentId for dimensionLine
     * @type {string}
     * @memberof DimensionLineApiPatchDimensionLine
     */
    readonly dimensionLineParentId: string

    /**
     * (v1.0) id for dimensionLine
     * @type {string}
     * @memberof DimensionLineApiPatchDimensionLine
     */
    readonly dimensionLineId: string

    /**
     * (v1.0) application/json
     * @type {string}
     * @memberof DimensionLineApiPatchDimensionLine
     */
    readonly contentType: string

    /**
     * (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
     * @type {string}
     * @memberof DimensionLineApiPatchDimensionLine
     */
    readonly ifMatch: string

    /**
     * 
     * @type {PostDimensionLineRequest}
     * @memberof DimensionLineApiPatchDimensionLine
     */
    readonly postDimensionLineRequest: PostDimensionLineRequest
}

/**
 * Request parameters for postDimensionLine operation in DimensionLineApi.
 * @export
 * @interface DimensionLineApiPostDimensionLineRequest
 */
export interface DimensionLineApiPostDimensionLineRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DimensionLineApiPostDimensionLine
     */
    readonly companyId: string

    /**
     * (v1.0) application/json
     * @type {string}
     * @memberof DimensionLineApiPostDimensionLine
     */
    readonly contentType: string

    /**
     * 
     * @type {PostDimensionLineRequest}
     * @memberof DimensionLineApiPostDimensionLine
     */
    readonly postDimensionLineRequest: PostDimensionLineRequest
}

/**
 * DimensionLineApi - object-oriented interface
 * @export
 * @class DimensionLineApi
 * @extends {BaseAPI}
 */
export class DimensionLineApi extends BaseAPI {
    /**
     * 
     * @summary Deletes an object of type dimensionLine in Dynamics 365 Business Central
     * @param {DimensionLineApiDeleteDimensionLineRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DimensionLineApi
     */
    public deleteDimensionLine(requestParameters: DimensionLineApiDeleteDimensionLineRequest, options?: RawAxiosRequestConfig) {
        return DimensionLineApiFp(this.configuration).deleteDimensionLine(requestParameters.companyId, requestParameters.dimensionLineParentId, requestParameters.dimensionLineId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Retrieve the properties and relationships of an object of type dimensionLine for Dynamics 365 Business Central.
     * @param {DimensionLineApiGetDimensionLineRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DimensionLineApi
     */
    public getDimensionLine(requestParameters: DimensionLineApiGetDimensionLineRequest, options?: RawAxiosRequestConfig) {
        return DimensionLineApiFp(this.configuration).getDimensionLine(requestParameters.companyId, requestParameters.dimensionLineParentId, requestParameters.dimensionLineId, requestParameters.$expand, requestParameters.$select, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Returns a list of dimensionLines
     * @param {DimensionLineApiListDimensionLinesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DimensionLineApi
     */
    public listDimensionLines(requestParameters: DimensionLineApiListDimensionLinesRequest, options?: RawAxiosRequestConfig) {
        return DimensionLineApiFp(this.configuration).listDimensionLines(requestParameters.companyId, requestParameters.$top, requestParameters.$skip, requestParameters.$limit, requestParameters.$filter, requestParameters.$expand, requestParameters.$select, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Updates an object of type dimensionLine in Dynamics 365 Business Central
     * @param {DimensionLineApiPatchDimensionLineRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DimensionLineApi
     */
    public patchDimensionLine(requestParameters: DimensionLineApiPatchDimensionLineRequest, options?: RawAxiosRequestConfig) {
        return DimensionLineApiFp(this.configuration).patchDimensionLine(requestParameters.companyId, requestParameters.dimensionLineParentId, requestParameters.dimensionLineId, requestParameters.contentType, requestParameters.ifMatch, requestParameters.postDimensionLineRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Creates an object of type dimensionLine in Dynamics 365 Business Central
     * @param {DimensionLineApiPostDimensionLineRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DimensionLineApi
     */
    public postDimensionLine(requestParameters: DimensionLineApiPostDimensionLineRequest, options?: RawAxiosRequestConfig) {
        return DimensionLineApiFp(this.configuration).postDimensionLine(requestParameters.companyId, requestParameters.contentType, requestParameters.postDimensionLineRequest, options).then((request) => request(this.axios, this.basePath));
    }
}

/**
 * @export
 */
export const GetDimensionLineExpandEnum = {
    Dimension: 'dimension'
} as const;
export type GetDimensionLineExpandEnum = typeof GetDimensionLineExpandEnum[keyof typeof GetDimensionLineExpandEnum];
/**
 * @export
 */
export const GetDimensionLineSelectEnum = {
    ParentId: 'parentId',
    Id: 'id',
    Code: 'code',
    DisplayName: 'displayName',
    ValueId: 'valueId',
    ValueCode: 'valueCode',
    ValueDisplayName: 'valueDisplayName'
} as const;
export type GetDimensionLineSelectEnum = typeof GetDimensionLineSelectEnum[keyof typeof GetDimensionLineSelectEnum];
/**
 * @export
 */
export const ListDimensionLinesExpandEnum = {
    Dimension: 'dimension'
} as const;
export type ListDimensionLinesExpandEnum = typeof ListDimensionLinesExpandEnum[keyof typeof ListDimensionLinesExpandEnum];
/**
 * @export
 */
export const ListDimensionLinesSelectEnum = {
    ParentId: 'parentId',
    Id: 'id',
    Code: 'code',
    DisplayName: 'displayName',
    ValueId: 'valueId',
    ValueCode: 'valueCode',
    ValueDisplayName: 'valueDisplayName'
} as const;
export type ListDimensionLinesSelectEnum = typeof ListDimensionLinesSelectEnum[keyof typeof ListDimensionLinesSelectEnum];
