/* tslint:disable */
/* eslint-disable */
/**
 * (v1.0) Dynamics 365 Business Central
 * (v1.0) Business Central Standard APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// URLSearchParams not necessarily used
// @ts-ignore
import { URL, URLSearchParams } from 'url';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, type RequestArgs, BaseAPI, RequiredError, operationServerMap } from '../base';
// @ts-ignore
import type { DefaultDimensions } from '../model';
// @ts-ignore
import type { ListDefaultDimensionsForItem200Response } from '../model';
// @ts-ignore
import type { PostDefaultDimensionsForItemRequest } from '../model';
/**
 * DefaultDimensionsApi - axios parameter creator
 * @export
 */
export const DefaultDimensionsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * 
         * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteDefaultDimensions: async (companyId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('deleteDefaultDimensions', 'companyId', companyId)
            // verify required parameter 'defaultDimensionsParentId' is not null or undefined
            assertParamExists('deleteDefaultDimensions', 'defaultDimensionsParentId', defaultDimensionsParentId)
            // verify required parameter 'defaultDimensionsDimensionId' is not null or undefined
            assertParamExists('deleteDefaultDimensions', 'defaultDimensionsDimensionId', defaultDimensionsDimensionId)
            const localVarPath = `/companies({company_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"defaultDimensions_parentId"}}`, encodeURIComponent(String(defaultDimensionsParentId)))
                .replace(`{${"defaultDimensions_dimensionId"}}`, encodeURIComponent(String(defaultDimensionsDimensionId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} customerId (v1.0) id for customer
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteDefaultDimensionsForCustomer: async (companyId: string, customerId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('deleteDefaultDimensionsForCustomer', 'companyId', companyId)
            // verify required parameter 'customerId' is not null or undefined
            assertParamExists('deleteDefaultDimensionsForCustomer', 'customerId', customerId)
            // verify required parameter 'defaultDimensionsParentId' is not null or undefined
            assertParamExists('deleteDefaultDimensionsForCustomer', 'defaultDimensionsParentId', defaultDimensionsParentId)
            // verify required parameter 'defaultDimensionsDimensionId' is not null or undefined
            assertParamExists('deleteDefaultDimensionsForCustomer', 'defaultDimensionsDimensionId', defaultDimensionsDimensionId)
            const localVarPath = `/companies({company_id})/customers({customer_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"customer_id"}}`, encodeURIComponent(String(customerId)))
                .replace(`{${"defaultDimensions_parentId"}}`, encodeURIComponent(String(defaultDimensionsParentId)))
                .replace(`{${"defaultDimensions_dimensionId"}}`, encodeURIComponent(String(defaultDimensionsDimensionId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} employeeId (v1.0) id for employee
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteDefaultDimensionsForEmployee: async (companyId: string, employeeId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('deleteDefaultDimensionsForEmployee', 'companyId', companyId)
            // verify required parameter 'employeeId' is not null or undefined
            assertParamExists('deleteDefaultDimensionsForEmployee', 'employeeId', employeeId)
            // verify required parameter 'defaultDimensionsParentId' is not null or undefined
            assertParamExists('deleteDefaultDimensionsForEmployee', 'defaultDimensionsParentId', defaultDimensionsParentId)
            // verify required parameter 'defaultDimensionsDimensionId' is not null or undefined
            assertParamExists('deleteDefaultDimensionsForEmployee', 'defaultDimensionsDimensionId', defaultDimensionsDimensionId)
            const localVarPath = `/companies({company_id})/employees({employee_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"employee_id"}}`, encodeURIComponent(String(employeeId)))
                .replace(`{${"defaultDimensions_parentId"}}`, encodeURIComponent(String(defaultDimensionsParentId)))
                .replace(`{${"defaultDimensions_dimensionId"}}`, encodeURIComponent(String(defaultDimensionsDimensionId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} itemId (v1.0) id for item
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteDefaultDimensionsForItem: async (companyId: string, itemId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('deleteDefaultDimensionsForItem', 'companyId', companyId)
            // verify required parameter 'itemId' is not null or undefined
            assertParamExists('deleteDefaultDimensionsForItem', 'itemId', itemId)
            // verify required parameter 'defaultDimensionsParentId' is not null or undefined
            assertParamExists('deleteDefaultDimensionsForItem', 'defaultDimensionsParentId', defaultDimensionsParentId)
            // verify required parameter 'defaultDimensionsDimensionId' is not null or undefined
            assertParamExists('deleteDefaultDimensionsForItem', 'defaultDimensionsDimensionId', defaultDimensionsDimensionId)
            const localVarPath = `/companies({company_id})/items({item_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"item_id"}}`, encodeURIComponent(String(itemId)))
                .replace(`{${"defaultDimensions_parentId"}}`, encodeURIComponent(String(defaultDimensionsParentId)))
                .replace(`{${"defaultDimensions_dimensionId"}}`, encodeURIComponent(String(defaultDimensionsDimensionId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} vendorId (v1.0) id for vendor
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteDefaultDimensionsForVendor: async (companyId: string, vendorId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('deleteDefaultDimensionsForVendor', 'companyId', companyId)
            // verify required parameter 'vendorId' is not null or undefined
            assertParamExists('deleteDefaultDimensionsForVendor', 'vendorId', vendorId)
            // verify required parameter 'defaultDimensionsParentId' is not null or undefined
            assertParamExists('deleteDefaultDimensionsForVendor', 'defaultDimensionsParentId', defaultDimensionsParentId)
            // verify required parameter 'defaultDimensionsDimensionId' is not null or undefined
            assertParamExists('deleteDefaultDimensionsForVendor', 'defaultDimensionsDimensionId', defaultDimensionsDimensionId)
            const localVarPath = `/companies({company_id})/vendors({vendor_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"vendor_id"}}`, encodeURIComponent(String(vendorId)))
                .replace(`{${"defaultDimensions_parentId"}}`, encodeURIComponent(String(defaultDimensionsParentId)))
                .replace(`{${"defaultDimensions_dimensionId"}}`, encodeURIComponent(String(defaultDimensionsDimensionId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
         * @param {string} companyId (v1.0) id for company
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {Array<GetDefaultDimensionsExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<GetDefaultDimensionsSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDefaultDimensions: async (companyId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, $expand?: Array<GetDefaultDimensionsExpandEnum>, $select?: Array<GetDefaultDimensionsSelectEnum>, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('getDefaultDimensions', 'companyId', companyId)
            // verify required parameter 'defaultDimensionsParentId' is not null or undefined
            assertParamExists('getDefaultDimensions', 'defaultDimensionsParentId', defaultDimensionsParentId)
            // verify required parameter 'defaultDimensionsDimensionId' is not null or undefined
            assertParamExists('getDefaultDimensions', 'defaultDimensionsDimensionId', defaultDimensionsDimensionId)
            const localVarPath = `/companies({company_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"defaultDimensions_parentId"}}`, encodeURIComponent(String(defaultDimensionsParentId)))
                .replace(`{${"defaultDimensions_dimensionId"}}`, encodeURIComponent(String(defaultDimensionsDimensionId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if ($expand) {
                localVarQueryParameter['$expand'] = $expand.join(COLLECTION_FORMATS.csv);
            }

            if ($select) {
                localVarQueryParameter['$select'] = $select.join(COLLECTION_FORMATS.csv);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
         * @param {string} companyId (v1.0) id for company
         * @param {string} customerId (v1.0) id for customer
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {Array<GetDefaultDimensionsForCustomerExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<GetDefaultDimensionsForCustomerSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDefaultDimensionsForCustomer: async (companyId: string, customerId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, $expand?: Array<GetDefaultDimensionsForCustomerExpandEnum>, $select?: Array<GetDefaultDimensionsForCustomerSelectEnum>, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('getDefaultDimensionsForCustomer', 'companyId', companyId)
            // verify required parameter 'customerId' is not null or undefined
            assertParamExists('getDefaultDimensionsForCustomer', 'customerId', customerId)
            // verify required parameter 'defaultDimensionsParentId' is not null or undefined
            assertParamExists('getDefaultDimensionsForCustomer', 'defaultDimensionsParentId', defaultDimensionsParentId)
            // verify required parameter 'defaultDimensionsDimensionId' is not null or undefined
            assertParamExists('getDefaultDimensionsForCustomer', 'defaultDimensionsDimensionId', defaultDimensionsDimensionId)
            const localVarPath = `/companies({company_id})/customers({customer_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"customer_id"}}`, encodeURIComponent(String(customerId)))
                .replace(`{${"defaultDimensions_parentId"}}`, encodeURIComponent(String(defaultDimensionsParentId)))
                .replace(`{${"defaultDimensions_dimensionId"}}`, encodeURIComponent(String(defaultDimensionsDimensionId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if ($expand) {
                localVarQueryParameter['$expand'] = $expand.join(COLLECTION_FORMATS.csv);
            }

            if ($select) {
                localVarQueryParameter['$select'] = $select.join(COLLECTION_FORMATS.csv);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
         * @param {string} companyId (v1.0) id for company
         * @param {string} employeeId (v1.0) id for employee
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {Array<GetDefaultDimensionsForEmployeeExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<GetDefaultDimensionsForEmployeeSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDefaultDimensionsForEmployee: async (companyId: string, employeeId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, $expand?: Array<GetDefaultDimensionsForEmployeeExpandEnum>, $select?: Array<GetDefaultDimensionsForEmployeeSelectEnum>, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('getDefaultDimensionsForEmployee', 'companyId', companyId)
            // verify required parameter 'employeeId' is not null or undefined
            assertParamExists('getDefaultDimensionsForEmployee', 'employeeId', employeeId)
            // verify required parameter 'defaultDimensionsParentId' is not null or undefined
            assertParamExists('getDefaultDimensionsForEmployee', 'defaultDimensionsParentId', defaultDimensionsParentId)
            // verify required parameter 'defaultDimensionsDimensionId' is not null or undefined
            assertParamExists('getDefaultDimensionsForEmployee', 'defaultDimensionsDimensionId', defaultDimensionsDimensionId)
            const localVarPath = `/companies({company_id})/employees({employee_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"employee_id"}}`, encodeURIComponent(String(employeeId)))
                .replace(`{${"defaultDimensions_parentId"}}`, encodeURIComponent(String(defaultDimensionsParentId)))
                .replace(`{${"defaultDimensions_dimensionId"}}`, encodeURIComponent(String(defaultDimensionsDimensionId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if ($expand) {
                localVarQueryParameter['$expand'] = $expand.join(COLLECTION_FORMATS.csv);
            }

            if ($select) {
                localVarQueryParameter['$select'] = $select.join(COLLECTION_FORMATS.csv);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
         * @param {string} companyId (v1.0) id for company
         * @param {string} itemId (v1.0) id for item
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {Array<GetDefaultDimensionsForItemExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<GetDefaultDimensionsForItemSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDefaultDimensionsForItem: async (companyId: string, itemId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, $expand?: Array<GetDefaultDimensionsForItemExpandEnum>, $select?: Array<GetDefaultDimensionsForItemSelectEnum>, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('getDefaultDimensionsForItem', 'companyId', companyId)
            // verify required parameter 'itemId' is not null or undefined
            assertParamExists('getDefaultDimensionsForItem', 'itemId', itemId)
            // verify required parameter 'defaultDimensionsParentId' is not null or undefined
            assertParamExists('getDefaultDimensionsForItem', 'defaultDimensionsParentId', defaultDimensionsParentId)
            // verify required parameter 'defaultDimensionsDimensionId' is not null or undefined
            assertParamExists('getDefaultDimensionsForItem', 'defaultDimensionsDimensionId', defaultDimensionsDimensionId)
            const localVarPath = `/companies({company_id})/items({item_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"item_id"}}`, encodeURIComponent(String(itemId)))
                .replace(`{${"defaultDimensions_parentId"}}`, encodeURIComponent(String(defaultDimensionsParentId)))
                .replace(`{${"defaultDimensions_dimensionId"}}`, encodeURIComponent(String(defaultDimensionsDimensionId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if ($expand) {
                localVarQueryParameter['$expand'] = $expand.join(COLLECTION_FORMATS.csv);
            }

            if ($select) {
                localVarQueryParameter['$select'] = $select.join(COLLECTION_FORMATS.csv);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
         * @param {string} companyId (v1.0) id for company
         * @param {string} vendorId (v1.0) id for vendor
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {Array<GetDefaultDimensionsForVendorExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<GetDefaultDimensionsForVendorSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDefaultDimensionsForVendor: async (companyId: string, vendorId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, $expand?: Array<GetDefaultDimensionsForVendorExpandEnum>, $select?: Array<GetDefaultDimensionsForVendorSelectEnum>, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('getDefaultDimensionsForVendor', 'companyId', companyId)
            // verify required parameter 'vendorId' is not null or undefined
            assertParamExists('getDefaultDimensionsForVendor', 'vendorId', vendorId)
            // verify required parameter 'defaultDimensionsParentId' is not null or undefined
            assertParamExists('getDefaultDimensionsForVendor', 'defaultDimensionsParentId', defaultDimensionsParentId)
            // verify required parameter 'defaultDimensionsDimensionId' is not null or undefined
            assertParamExists('getDefaultDimensionsForVendor', 'defaultDimensionsDimensionId', defaultDimensionsDimensionId)
            const localVarPath = `/companies({company_id})/vendors({vendor_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"vendor_id"}}`, encodeURIComponent(String(vendorId)))
                .replace(`{${"defaultDimensions_parentId"}}`, encodeURIComponent(String(defaultDimensionsParentId)))
                .replace(`{${"defaultDimensions_dimensionId"}}`, encodeURIComponent(String(defaultDimensionsDimensionId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if ($expand) {
                localVarQueryParameter['$expand'] = $expand.join(COLLECTION_FORMATS.csv);
            }

            if ($select) {
                localVarQueryParameter['$select'] = $select.join(COLLECTION_FORMATS.csv);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Returns a list of defaultDimensions
         * @param {string} companyId (v1.0) id for company
         * @param {number} [$top] (v1.0) Number of items to return from the top of the list
         * @param {number} [$skip] (v1.0) Number of items to skip from the list
         * @param {number} [$limit] (v1.0) Number of items to return from the list
         * @param {string} [$filter] (v1.0) Filtering expression
         * @param {Array<ListDefaultDimensionsExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<ListDefaultDimensionsSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listDefaultDimensions: async (companyId: string, $top?: number, $skip?: number, $limit?: number, $filter?: string, $expand?: Array<ListDefaultDimensionsExpandEnum>, $select?: Array<ListDefaultDimensionsSelectEnum>, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('listDefaultDimensions', 'companyId', companyId)
            const localVarPath = `/companies({company_id})/defaultDimensions`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if ($top !== undefined) {
                localVarQueryParameter['$top'] = $top;
            }

            if ($skip !== undefined) {
                localVarQueryParameter['$skip'] = $skip;
            }

            if ($limit !== undefined) {
                localVarQueryParameter['$limit'] = $limit;
            }

            if ($filter !== undefined) {
                localVarQueryParameter['$filter'] = $filter;
            }

            if ($expand) {
                localVarQueryParameter['$expand'] = $expand.join(COLLECTION_FORMATS.csv);
            }

            if ($select) {
                localVarQueryParameter['$select'] = $select.join(COLLECTION_FORMATS.csv);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Returns a list of defaultDimensions
         * @param {string} companyId (v1.0) id for company
         * @param {string} customerId (v1.0) id for customer
         * @param {number} [$top] (v1.0) Number of items to return from the top of the list
         * @param {number} [$skip] (v1.0) Number of items to skip from the list
         * @param {number} [$limit] (v1.0) Number of items to return from the list
         * @param {string} [$filter] (v1.0) Filtering expression
         * @param {Array<ListDefaultDimensionsForCustomerExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<ListDefaultDimensionsForCustomerSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listDefaultDimensionsForCustomer: async (companyId: string, customerId: string, $top?: number, $skip?: number, $limit?: number, $filter?: string, $expand?: Array<ListDefaultDimensionsForCustomerExpandEnum>, $select?: Array<ListDefaultDimensionsForCustomerSelectEnum>, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('listDefaultDimensionsForCustomer', 'companyId', companyId)
            // verify required parameter 'customerId' is not null or undefined
            assertParamExists('listDefaultDimensionsForCustomer', 'customerId', customerId)
            const localVarPath = `/companies({company_id})/customers({customer_id})/defaultDimensions`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"customer_id"}}`, encodeURIComponent(String(customerId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if ($top !== undefined) {
                localVarQueryParameter['$top'] = $top;
            }

            if ($skip !== undefined) {
                localVarQueryParameter['$skip'] = $skip;
            }

            if ($limit !== undefined) {
                localVarQueryParameter['$limit'] = $limit;
            }

            if ($filter !== undefined) {
                localVarQueryParameter['$filter'] = $filter;
            }

            if ($expand) {
                localVarQueryParameter['$expand'] = $expand.join(COLLECTION_FORMATS.csv);
            }

            if ($select) {
                localVarQueryParameter['$select'] = $select.join(COLLECTION_FORMATS.csv);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Returns a list of defaultDimensions
         * @param {string} companyId (v1.0) id for company
         * @param {string} employeeId (v1.0) id for employee
         * @param {number} [$top] (v1.0) Number of items to return from the top of the list
         * @param {number} [$skip] (v1.0) Number of items to skip from the list
         * @param {number} [$limit] (v1.0) Number of items to return from the list
         * @param {string} [$filter] (v1.0) Filtering expression
         * @param {Array<ListDefaultDimensionsForEmployeeExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<ListDefaultDimensionsForEmployeeSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listDefaultDimensionsForEmployee: async (companyId: string, employeeId: string, $top?: number, $skip?: number, $limit?: number, $filter?: string, $expand?: Array<ListDefaultDimensionsForEmployeeExpandEnum>, $select?: Array<ListDefaultDimensionsForEmployeeSelectEnum>, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('listDefaultDimensionsForEmployee', 'companyId', companyId)
            // verify required parameter 'employeeId' is not null or undefined
            assertParamExists('listDefaultDimensionsForEmployee', 'employeeId', employeeId)
            const localVarPath = `/companies({company_id})/employees({employee_id})/defaultDimensions`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"employee_id"}}`, encodeURIComponent(String(employeeId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if ($top !== undefined) {
                localVarQueryParameter['$top'] = $top;
            }

            if ($skip !== undefined) {
                localVarQueryParameter['$skip'] = $skip;
            }

            if ($limit !== undefined) {
                localVarQueryParameter['$limit'] = $limit;
            }

            if ($filter !== undefined) {
                localVarQueryParameter['$filter'] = $filter;
            }

            if ($expand) {
                localVarQueryParameter['$expand'] = $expand.join(COLLECTION_FORMATS.csv);
            }

            if ($select) {
                localVarQueryParameter['$select'] = $select.join(COLLECTION_FORMATS.csv);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Returns a list of defaultDimensions
         * @param {string} companyId (v1.0) id for company
         * @param {string} itemId (v1.0) id for item
         * @param {number} [$top] (v1.0) Number of items to return from the top of the list
         * @param {number} [$skip] (v1.0) Number of items to skip from the list
         * @param {number} [$limit] (v1.0) Number of items to return from the list
         * @param {string} [$filter] (v1.0) Filtering expression
         * @param {Array<ListDefaultDimensionsForItemExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<ListDefaultDimensionsForItemSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listDefaultDimensionsForItem: async (companyId: string, itemId: string, $top?: number, $skip?: number, $limit?: number, $filter?: string, $expand?: Array<ListDefaultDimensionsForItemExpandEnum>, $select?: Array<ListDefaultDimensionsForItemSelectEnum>, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('listDefaultDimensionsForItem', 'companyId', companyId)
            // verify required parameter 'itemId' is not null or undefined
            assertParamExists('listDefaultDimensionsForItem', 'itemId', itemId)
            const localVarPath = `/companies({company_id})/items({item_id})/defaultDimensions`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"item_id"}}`, encodeURIComponent(String(itemId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if ($top !== undefined) {
                localVarQueryParameter['$top'] = $top;
            }

            if ($skip !== undefined) {
                localVarQueryParameter['$skip'] = $skip;
            }

            if ($limit !== undefined) {
                localVarQueryParameter['$limit'] = $limit;
            }

            if ($filter !== undefined) {
                localVarQueryParameter['$filter'] = $filter;
            }

            if ($expand) {
                localVarQueryParameter['$expand'] = $expand.join(COLLECTION_FORMATS.csv);
            }

            if ($select) {
                localVarQueryParameter['$select'] = $select.join(COLLECTION_FORMATS.csv);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Returns a list of defaultDimensions
         * @param {string} companyId (v1.0) id for company
         * @param {string} vendorId (v1.0) id for vendor
         * @param {number} [$top] (v1.0) Number of items to return from the top of the list
         * @param {number} [$skip] (v1.0) Number of items to skip from the list
         * @param {number} [$limit] (v1.0) Number of items to return from the list
         * @param {string} [$filter] (v1.0) Filtering expression
         * @param {Array<ListDefaultDimensionsForVendorExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<ListDefaultDimensionsForVendorSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listDefaultDimensionsForVendor: async (companyId: string, vendorId: string, $top?: number, $skip?: number, $limit?: number, $filter?: string, $expand?: Array<ListDefaultDimensionsForVendorExpandEnum>, $select?: Array<ListDefaultDimensionsForVendorSelectEnum>, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('listDefaultDimensionsForVendor', 'companyId', companyId)
            // verify required parameter 'vendorId' is not null or undefined
            assertParamExists('listDefaultDimensionsForVendor', 'vendorId', vendorId)
            const localVarPath = `/companies({company_id})/vendors({vendor_id})/defaultDimensions`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"vendor_id"}}`, encodeURIComponent(String(vendorId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if ($top !== undefined) {
                localVarQueryParameter['$top'] = $top;
            }

            if ($skip !== undefined) {
                localVarQueryParameter['$skip'] = $skip;
            }

            if ($limit !== undefined) {
                localVarQueryParameter['$limit'] = $limit;
            }

            if ($filter !== undefined) {
                localVarQueryParameter['$filter'] = $filter;
            }

            if ($expand) {
                localVarQueryParameter['$expand'] = $expand.join(COLLECTION_FORMATS.csv);
            }

            if ($select) {
                localVarQueryParameter['$select'] = $select.join(COLLECTION_FORMATS.csv);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {string} contentType (v1.0) application/json
         * @param {string} ifMatch (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchDefaultDimensions: async (companyId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, contentType: string, ifMatch: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('patchDefaultDimensions', 'companyId', companyId)
            // verify required parameter 'defaultDimensionsParentId' is not null or undefined
            assertParamExists('patchDefaultDimensions', 'defaultDimensionsParentId', defaultDimensionsParentId)
            // verify required parameter 'defaultDimensionsDimensionId' is not null or undefined
            assertParamExists('patchDefaultDimensions', 'defaultDimensionsDimensionId', defaultDimensionsDimensionId)
            // verify required parameter 'contentType' is not null or undefined
            assertParamExists('patchDefaultDimensions', 'contentType', contentType)
            // verify required parameter 'ifMatch' is not null or undefined
            assertParamExists('patchDefaultDimensions', 'ifMatch', ifMatch)
            // verify required parameter 'postDefaultDimensionsForItemRequest' is not null or undefined
            assertParamExists('patchDefaultDimensions', 'postDefaultDimensionsForItemRequest', postDefaultDimensionsForItemRequest)
            const localVarPath = `/companies({company_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"defaultDimensions_parentId"}}`, encodeURIComponent(String(defaultDimensionsParentId)))
                .replace(`{${"defaultDimensions_dimensionId"}}`, encodeURIComponent(String(defaultDimensionsDimensionId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if (contentType != null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }

            if (ifMatch != null) {
                localVarHeaderParameter['If-Match'] = String(ifMatch);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(postDefaultDimensionsForItemRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} customerId (v1.0) id for customer
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {string} contentType (v1.0) application/json
         * @param {string} ifMatch (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchDefaultDimensionsForCustomer: async (companyId: string, customerId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, contentType: string, ifMatch: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('patchDefaultDimensionsForCustomer', 'companyId', companyId)
            // verify required parameter 'customerId' is not null or undefined
            assertParamExists('patchDefaultDimensionsForCustomer', 'customerId', customerId)
            // verify required parameter 'defaultDimensionsParentId' is not null or undefined
            assertParamExists('patchDefaultDimensionsForCustomer', 'defaultDimensionsParentId', defaultDimensionsParentId)
            // verify required parameter 'defaultDimensionsDimensionId' is not null or undefined
            assertParamExists('patchDefaultDimensionsForCustomer', 'defaultDimensionsDimensionId', defaultDimensionsDimensionId)
            // verify required parameter 'contentType' is not null or undefined
            assertParamExists('patchDefaultDimensionsForCustomer', 'contentType', contentType)
            // verify required parameter 'ifMatch' is not null or undefined
            assertParamExists('patchDefaultDimensionsForCustomer', 'ifMatch', ifMatch)
            // verify required parameter 'postDefaultDimensionsForItemRequest' is not null or undefined
            assertParamExists('patchDefaultDimensionsForCustomer', 'postDefaultDimensionsForItemRequest', postDefaultDimensionsForItemRequest)
            const localVarPath = `/companies({company_id})/customers({customer_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"customer_id"}}`, encodeURIComponent(String(customerId)))
                .replace(`{${"defaultDimensions_parentId"}}`, encodeURIComponent(String(defaultDimensionsParentId)))
                .replace(`{${"defaultDimensions_dimensionId"}}`, encodeURIComponent(String(defaultDimensionsDimensionId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if (contentType != null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }

            if (ifMatch != null) {
                localVarHeaderParameter['If-Match'] = String(ifMatch);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(postDefaultDimensionsForItemRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} employeeId (v1.0) id for employee
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {string} contentType (v1.0) application/json
         * @param {string} ifMatch (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchDefaultDimensionsForEmployee: async (companyId: string, employeeId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, contentType: string, ifMatch: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('patchDefaultDimensionsForEmployee', 'companyId', companyId)
            // verify required parameter 'employeeId' is not null or undefined
            assertParamExists('patchDefaultDimensionsForEmployee', 'employeeId', employeeId)
            // verify required parameter 'defaultDimensionsParentId' is not null or undefined
            assertParamExists('patchDefaultDimensionsForEmployee', 'defaultDimensionsParentId', defaultDimensionsParentId)
            // verify required parameter 'defaultDimensionsDimensionId' is not null or undefined
            assertParamExists('patchDefaultDimensionsForEmployee', 'defaultDimensionsDimensionId', defaultDimensionsDimensionId)
            // verify required parameter 'contentType' is not null or undefined
            assertParamExists('patchDefaultDimensionsForEmployee', 'contentType', contentType)
            // verify required parameter 'ifMatch' is not null or undefined
            assertParamExists('patchDefaultDimensionsForEmployee', 'ifMatch', ifMatch)
            // verify required parameter 'postDefaultDimensionsForItemRequest' is not null or undefined
            assertParamExists('patchDefaultDimensionsForEmployee', 'postDefaultDimensionsForItemRequest', postDefaultDimensionsForItemRequest)
            const localVarPath = `/companies({company_id})/employees({employee_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"employee_id"}}`, encodeURIComponent(String(employeeId)))
                .replace(`{${"defaultDimensions_parentId"}}`, encodeURIComponent(String(defaultDimensionsParentId)))
                .replace(`{${"defaultDimensions_dimensionId"}}`, encodeURIComponent(String(defaultDimensionsDimensionId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if (contentType != null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }

            if (ifMatch != null) {
                localVarHeaderParameter['If-Match'] = String(ifMatch);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(postDefaultDimensionsForItemRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} itemId (v1.0) id for item
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {string} contentType (v1.0) application/json
         * @param {string} ifMatch (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchDefaultDimensionsForItem: async (companyId: string, itemId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, contentType: string, ifMatch: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('patchDefaultDimensionsForItem', 'companyId', companyId)
            // verify required parameter 'itemId' is not null or undefined
            assertParamExists('patchDefaultDimensionsForItem', 'itemId', itemId)
            // verify required parameter 'defaultDimensionsParentId' is not null or undefined
            assertParamExists('patchDefaultDimensionsForItem', 'defaultDimensionsParentId', defaultDimensionsParentId)
            // verify required parameter 'defaultDimensionsDimensionId' is not null or undefined
            assertParamExists('patchDefaultDimensionsForItem', 'defaultDimensionsDimensionId', defaultDimensionsDimensionId)
            // verify required parameter 'contentType' is not null or undefined
            assertParamExists('patchDefaultDimensionsForItem', 'contentType', contentType)
            // verify required parameter 'ifMatch' is not null or undefined
            assertParamExists('patchDefaultDimensionsForItem', 'ifMatch', ifMatch)
            // verify required parameter 'postDefaultDimensionsForItemRequest' is not null or undefined
            assertParamExists('patchDefaultDimensionsForItem', 'postDefaultDimensionsForItemRequest', postDefaultDimensionsForItemRequest)
            const localVarPath = `/companies({company_id})/items({item_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"item_id"}}`, encodeURIComponent(String(itemId)))
                .replace(`{${"defaultDimensions_parentId"}}`, encodeURIComponent(String(defaultDimensionsParentId)))
                .replace(`{${"defaultDimensions_dimensionId"}}`, encodeURIComponent(String(defaultDimensionsDimensionId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if (contentType != null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }

            if (ifMatch != null) {
                localVarHeaderParameter['If-Match'] = String(ifMatch);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(postDefaultDimensionsForItemRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} vendorId (v1.0) id for vendor
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {string} contentType (v1.0) application/json
         * @param {string} ifMatch (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchDefaultDimensionsForVendor: async (companyId: string, vendorId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, contentType: string, ifMatch: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('patchDefaultDimensionsForVendor', 'companyId', companyId)
            // verify required parameter 'vendorId' is not null or undefined
            assertParamExists('patchDefaultDimensionsForVendor', 'vendorId', vendorId)
            // verify required parameter 'defaultDimensionsParentId' is not null or undefined
            assertParamExists('patchDefaultDimensionsForVendor', 'defaultDimensionsParentId', defaultDimensionsParentId)
            // verify required parameter 'defaultDimensionsDimensionId' is not null or undefined
            assertParamExists('patchDefaultDimensionsForVendor', 'defaultDimensionsDimensionId', defaultDimensionsDimensionId)
            // verify required parameter 'contentType' is not null or undefined
            assertParamExists('patchDefaultDimensionsForVendor', 'contentType', contentType)
            // verify required parameter 'ifMatch' is not null or undefined
            assertParamExists('patchDefaultDimensionsForVendor', 'ifMatch', ifMatch)
            // verify required parameter 'postDefaultDimensionsForItemRequest' is not null or undefined
            assertParamExists('patchDefaultDimensionsForVendor', 'postDefaultDimensionsForItemRequest', postDefaultDimensionsForItemRequest)
            const localVarPath = `/companies({company_id})/vendors({vendor_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"vendor_id"}}`, encodeURIComponent(String(vendorId)))
                .replace(`{${"defaultDimensions_parentId"}}`, encodeURIComponent(String(defaultDimensionsParentId)))
                .replace(`{${"defaultDimensions_dimensionId"}}`, encodeURIComponent(String(defaultDimensionsDimensionId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if (contentType != null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }

            if (ifMatch != null) {
                localVarHeaderParameter['If-Match'] = String(ifMatch);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(postDefaultDimensionsForItemRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} contentType (v1.0) application/json
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postDefaultDimensions: async (companyId: string, contentType: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('postDefaultDimensions', 'companyId', companyId)
            // verify required parameter 'contentType' is not null or undefined
            assertParamExists('postDefaultDimensions', 'contentType', contentType)
            // verify required parameter 'postDefaultDimensionsForItemRequest' is not null or undefined
            assertParamExists('postDefaultDimensions', 'postDefaultDimensionsForItemRequest', postDefaultDimensionsForItemRequest)
            const localVarPath = `/companies({company_id})/defaultDimensions`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if (contentType != null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(postDefaultDimensionsForItemRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} customerId (v1.0) id for customer
         * @param {string} contentType (v1.0) application/json
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postDefaultDimensionsForCustomer: async (companyId: string, customerId: string, contentType: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('postDefaultDimensionsForCustomer', 'companyId', companyId)
            // verify required parameter 'customerId' is not null or undefined
            assertParamExists('postDefaultDimensionsForCustomer', 'customerId', customerId)
            // verify required parameter 'contentType' is not null or undefined
            assertParamExists('postDefaultDimensionsForCustomer', 'contentType', contentType)
            // verify required parameter 'postDefaultDimensionsForItemRequest' is not null or undefined
            assertParamExists('postDefaultDimensionsForCustomer', 'postDefaultDimensionsForItemRequest', postDefaultDimensionsForItemRequest)
            const localVarPath = `/companies({company_id})/customers({customer_id})/defaultDimensions`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"customer_id"}}`, encodeURIComponent(String(customerId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if (contentType != null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(postDefaultDimensionsForItemRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} employeeId (v1.0) id for employee
         * @param {string} contentType (v1.0) application/json
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postDefaultDimensionsForEmployee: async (companyId: string, employeeId: string, contentType: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('postDefaultDimensionsForEmployee', 'companyId', companyId)
            // verify required parameter 'employeeId' is not null or undefined
            assertParamExists('postDefaultDimensionsForEmployee', 'employeeId', employeeId)
            // verify required parameter 'contentType' is not null or undefined
            assertParamExists('postDefaultDimensionsForEmployee', 'contentType', contentType)
            // verify required parameter 'postDefaultDimensionsForItemRequest' is not null or undefined
            assertParamExists('postDefaultDimensionsForEmployee', 'postDefaultDimensionsForItemRequest', postDefaultDimensionsForItemRequest)
            const localVarPath = `/companies({company_id})/employees({employee_id})/defaultDimensions`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"employee_id"}}`, encodeURIComponent(String(employeeId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if (contentType != null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(postDefaultDimensionsForItemRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} itemId (v1.0) id for item
         * @param {string} contentType (v1.0) application/json
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postDefaultDimensionsForItem: async (companyId: string, itemId: string, contentType: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('postDefaultDimensionsForItem', 'companyId', companyId)
            // verify required parameter 'itemId' is not null or undefined
            assertParamExists('postDefaultDimensionsForItem', 'itemId', itemId)
            // verify required parameter 'contentType' is not null or undefined
            assertParamExists('postDefaultDimensionsForItem', 'contentType', contentType)
            // verify required parameter 'postDefaultDimensionsForItemRequest' is not null or undefined
            assertParamExists('postDefaultDimensionsForItem', 'postDefaultDimensionsForItemRequest', postDefaultDimensionsForItemRequest)
            const localVarPath = `/companies({company_id})/items({item_id})/defaultDimensions`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"item_id"}}`, encodeURIComponent(String(itemId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if (contentType != null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(postDefaultDimensionsForItemRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} vendorId (v1.0) id for vendor
         * @param {string} contentType (v1.0) application/json
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postDefaultDimensionsForVendor: async (companyId: string, vendorId: string, contentType: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('postDefaultDimensionsForVendor', 'companyId', companyId)
            // verify required parameter 'vendorId' is not null or undefined
            assertParamExists('postDefaultDimensionsForVendor', 'vendorId', vendorId)
            // verify required parameter 'contentType' is not null or undefined
            assertParamExists('postDefaultDimensionsForVendor', 'contentType', contentType)
            // verify required parameter 'postDefaultDimensionsForItemRequest' is not null or undefined
            assertParamExists('postDefaultDimensionsForVendor', 'postDefaultDimensionsForItemRequest', postDefaultDimensionsForItemRequest)
            const localVarPath = `/companies({company_id})/vendors({vendor_id})/defaultDimensions`
                .replace(`{${"company_id"}}`, encodeURIComponent(String(companyId)))
                .replace(`{${"vendor_id"}}`, encodeURIComponent(String(vendorId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oAuth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oAuth", ["Financials.ReadWrite.All"], configuration)

            if (contentType != null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(postDefaultDimensionsForItemRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * DefaultDimensionsApi - functional programming interface
 * @export
 */
export const DefaultDimensionsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = DefaultDimensionsApiAxiosParamCreator(configuration)
    return {
        /**
         * 
         * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteDefaultDimensions(companyId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteDefaultDimensions(companyId, defaultDimensionsParentId, defaultDimensionsDimensionId, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.deleteDefaultDimensions']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} customerId (v1.0) id for customer
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteDefaultDimensionsForCustomer(companyId: string, customerId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteDefaultDimensionsForCustomer(companyId, customerId, defaultDimensionsParentId, defaultDimensionsDimensionId, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.deleteDefaultDimensionsForCustomer']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} employeeId (v1.0) id for employee
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteDefaultDimensionsForEmployee(companyId: string, employeeId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteDefaultDimensionsForEmployee(companyId, employeeId, defaultDimensionsParentId, defaultDimensionsDimensionId, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.deleteDefaultDimensionsForEmployee']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} itemId (v1.0) id for item
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteDefaultDimensionsForItem(companyId: string, itemId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteDefaultDimensionsForItem(companyId, itemId, defaultDimensionsParentId, defaultDimensionsDimensionId, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.deleteDefaultDimensionsForItem']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} vendorId (v1.0) id for vendor
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteDefaultDimensionsForVendor(companyId: string, vendorId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteDefaultDimensionsForVendor(companyId, vendorId, defaultDimensionsParentId, defaultDimensionsDimensionId, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.deleteDefaultDimensionsForVendor']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
         * @param {string} companyId (v1.0) id for company
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {Array<GetDefaultDimensionsExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<GetDefaultDimensionsSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getDefaultDimensions(companyId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, $expand?: Array<GetDefaultDimensionsExpandEnum>, $select?: Array<GetDefaultDimensionsSelectEnum>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultDimensions>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getDefaultDimensions(companyId, defaultDimensionsParentId, defaultDimensionsDimensionId, $expand, $select, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.getDefaultDimensions']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
         * @param {string} companyId (v1.0) id for company
         * @param {string} customerId (v1.0) id for customer
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {Array<GetDefaultDimensionsForCustomerExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<GetDefaultDimensionsForCustomerSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getDefaultDimensionsForCustomer(companyId: string, customerId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, $expand?: Array<GetDefaultDimensionsForCustomerExpandEnum>, $select?: Array<GetDefaultDimensionsForCustomerSelectEnum>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultDimensions>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getDefaultDimensionsForCustomer(companyId, customerId, defaultDimensionsParentId, defaultDimensionsDimensionId, $expand, $select, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.getDefaultDimensionsForCustomer']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
         * @param {string} companyId (v1.0) id for company
         * @param {string} employeeId (v1.0) id for employee
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {Array<GetDefaultDimensionsForEmployeeExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<GetDefaultDimensionsForEmployeeSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getDefaultDimensionsForEmployee(companyId: string, employeeId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, $expand?: Array<GetDefaultDimensionsForEmployeeExpandEnum>, $select?: Array<GetDefaultDimensionsForEmployeeSelectEnum>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultDimensions>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getDefaultDimensionsForEmployee(companyId, employeeId, defaultDimensionsParentId, defaultDimensionsDimensionId, $expand, $select, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.getDefaultDimensionsForEmployee']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
         * @param {string} companyId (v1.0) id for company
         * @param {string} itemId (v1.0) id for item
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {Array<GetDefaultDimensionsForItemExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<GetDefaultDimensionsForItemSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getDefaultDimensionsForItem(companyId: string, itemId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, $expand?: Array<GetDefaultDimensionsForItemExpandEnum>, $select?: Array<GetDefaultDimensionsForItemSelectEnum>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultDimensions>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getDefaultDimensionsForItem(companyId, itemId, defaultDimensionsParentId, defaultDimensionsDimensionId, $expand, $select, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.getDefaultDimensionsForItem']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
         * @param {string} companyId (v1.0) id for company
         * @param {string} vendorId (v1.0) id for vendor
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {Array<GetDefaultDimensionsForVendorExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<GetDefaultDimensionsForVendorSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getDefaultDimensionsForVendor(companyId: string, vendorId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, $expand?: Array<GetDefaultDimensionsForVendorExpandEnum>, $select?: Array<GetDefaultDimensionsForVendorSelectEnum>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultDimensions>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getDefaultDimensionsForVendor(companyId, vendorId, defaultDimensionsParentId, defaultDimensionsDimensionId, $expand, $select, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.getDefaultDimensionsForVendor']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Returns a list of defaultDimensions
         * @param {string} companyId (v1.0) id for company
         * @param {number} [$top] (v1.0) Number of items to return from the top of the list
         * @param {number} [$skip] (v1.0) Number of items to skip from the list
         * @param {number} [$limit] (v1.0) Number of items to return from the list
         * @param {string} [$filter] (v1.0) Filtering expression
         * @param {Array<ListDefaultDimensionsExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<ListDefaultDimensionsSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listDefaultDimensions(companyId: string, $top?: number, $skip?: number, $limit?: number, $filter?: string, $expand?: Array<ListDefaultDimensionsExpandEnum>, $select?: Array<ListDefaultDimensionsSelectEnum>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListDefaultDimensionsForItem200Response>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listDefaultDimensions(companyId, $top, $skip, $limit, $filter, $expand, $select, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.listDefaultDimensions']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Returns a list of defaultDimensions
         * @param {string} companyId (v1.0) id for company
         * @param {string} customerId (v1.0) id for customer
         * @param {number} [$top] (v1.0) Number of items to return from the top of the list
         * @param {number} [$skip] (v1.0) Number of items to skip from the list
         * @param {number} [$limit] (v1.0) Number of items to return from the list
         * @param {string} [$filter] (v1.0) Filtering expression
         * @param {Array<ListDefaultDimensionsForCustomerExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<ListDefaultDimensionsForCustomerSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listDefaultDimensionsForCustomer(companyId: string, customerId: string, $top?: number, $skip?: number, $limit?: number, $filter?: string, $expand?: Array<ListDefaultDimensionsForCustomerExpandEnum>, $select?: Array<ListDefaultDimensionsForCustomerSelectEnum>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListDefaultDimensionsForItem200Response>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listDefaultDimensionsForCustomer(companyId, customerId, $top, $skip, $limit, $filter, $expand, $select, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.listDefaultDimensionsForCustomer']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Returns a list of defaultDimensions
         * @param {string} companyId (v1.0) id for company
         * @param {string} employeeId (v1.0) id for employee
         * @param {number} [$top] (v1.0) Number of items to return from the top of the list
         * @param {number} [$skip] (v1.0) Number of items to skip from the list
         * @param {number} [$limit] (v1.0) Number of items to return from the list
         * @param {string} [$filter] (v1.0) Filtering expression
         * @param {Array<ListDefaultDimensionsForEmployeeExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<ListDefaultDimensionsForEmployeeSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listDefaultDimensionsForEmployee(companyId: string, employeeId: string, $top?: number, $skip?: number, $limit?: number, $filter?: string, $expand?: Array<ListDefaultDimensionsForEmployeeExpandEnum>, $select?: Array<ListDefaultDimensionsForEmployeeSelectEnum>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListDefaultDimensionsForItem200Response>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listDefaultDimensionsForEmployee(companyId, employeeId, $top, $skip, $limit, $filter, $expand, $select, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.listDefaultDimensionsForEmployee']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Returns a list of defaultDimensions
         * @param {string} companyId (v1.0) id for company
         * @param {string} itemId (v1.0) id for item
         * @param {number} [$top] (v1.0) Number of items to return from the top of the list
         * @param {number} [$skip] (v1.0) Number of items to skip from the list
         * @param {number} [$limit] (v1.0) Number of items to return from the list
         * @param {string} [$filter] (v1.0) Filtering expression
         * @param {Array<ListDefaultDimensionsForItemExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<ListDefaultDimensionsForItemSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listDefaultDimensionsForItem(companyId: string, itemId: string, $top?: number, $skip?: number, $limit?: number, $filter?: string, $expand?: Array<ListDefaultDimensionsForItemExpandEnum>, $select?: Array<ListDefaultDimensionsForItemSelectEnum>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListDefaultDimensionsForItem200Response>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listDefaultDimensionsForItem(companyId, itemId, $top, $skip, $limit, $filter, $expand, $select, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.listDefaultDimensionsForItem']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Returns a list of defaultDimensions
         * @param {string} companyId (v1.0) id for company
         * @param {string} vendorId (v1.0) id for vendor
         * @param {number} [$top] (v1.0) Number of items to return from the top of the list
         * @param {number} [$skip] (v1.0) Number of items to skip from the list
         * @param {number} [$limit] (v1.0) Number of items to return from the list
         * @param {string} [$filter] (v1.0) Filtering expression
         * @param {Array<ListDefaultDimensionsForVendorExpandEnum>} [$expand] (v1.0) Entities to expand
         * @param {Array<ListDefaultDimensionsForVendorSelectEnum>} [$select] (v1.0) Selected properties to be retrieved
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listDefaultDimensionsForVendor(companyId: string, vendorId: string, $top?: number, $skip?: number, $limit?: number, $filter?: string, $expand?: Array<ListDefaultDimensionsForVendorExpandEnum>, $select?: Array<ListDefaultDimensionsForVendorSelectEnum>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListDefaultDimensionsForItem200Response>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listDefaultDimensionsForVendor(companyId, vendorId, $top, $skip, $limit, $filter, $expand, $select, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.listDefaultDimensionsForVendor']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {string} contentType (v1.0) application/json
         * @param {string} ifMatch (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async patchDefaultDimensions(companyId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, contentType: string, ifMatch: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultDimensions>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.patchDefaultDimensions(companyId, defaultDimensionsParentId, defaultDimensionsDimensionId, contentType, ifMatch, postDefaultDimensionsForItemRequest, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.patchDefaultDimensions']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} customerId (v1.0) id for customer
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {string} contentType (v1.0) application/json
         * @param {string} ifMatch (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async patchDefaultDimensionsForCustomer(companyId: string, customerId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, contentType: string, ifMatch: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultDimensions>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.patchDefaultDimensionsForCustomer(companyId, customerId, defaultDimensionsParentId, defaultDimensionsDimensionId, contentType, ifMatch, postDefaultDimensionsForItemRequest, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.patchDefaultDimensionsForCustomer']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} employeeId (v1.0) id for employee
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {string} contentType (v1.0) application/json
         * @param {string} ifMatch (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async patchDefaultDimensionsForEmployee(companyId: string, employeeId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, contentType: string, ifMatch: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultDimensions>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.patchDefaultDimensionsForEmployee(companyId, employeeId, defaultDimensionsParentId, defaultDimensionsDimensionId, contentType, ifMatch, postDefaultDimensionsForItemRequest, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.patchDefaultDimensionsForEmployee']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} itemId (v1.0) id for item
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {string} contentType (v1.0) application/json
         * @param {string} ifMatch (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async patchDefaultDimensionsForItem(companyId: string, itemId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, contentType: string, ifMatch: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultDimensions>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.patchDefaultDimensionsForItem(companyId, itemId, defaultDimensionsParentId, defaultDimensionsDimensionId, contentType, ifMatch, postDefaultDimensionsForItemRequest, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.patchDefaultDimensionsForItem']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} vendorId (v1.0) id for vendor
         * @param {string} defaultDimensionsParentId (v1.0) parentId for defaultDimensions
         * @param {string} defaultDimensionsDimensionId (v1.0) dimensionId for defaultDimensions
         * @param {string} contentType (v1.0) application/json
         * @param {string} ifMatch (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async patchDefaultDimensionsForVendor(companyId: string, vendorId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, contentType: string, ifMatch: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultDimensions>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.patchDefaultDimensionsForVendor(companyId, vendorId, defaultDimensionsParentId, defaultDimensionsDimensionId, contentType, ifMatch, postDefaultDimensionsForItemRequest, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.patchDefaultDimensionsForVendor']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} contentType (v1.0) application/json
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async postDefaultDimensions(companyId: string, contentType: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultDimensions>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.postDefaultDimensions(companyId, contentType, postDefaultDimensionsForItemRequest, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.postDefaultDimensions']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} customerId (v1.0) id for customer
         * @param {string} contentType (v1.0) application/json
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async postDefaultDimensionsForCustomer(companyId: string, customerId: string, contentType: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultDimensions>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.postDefaultDimensionsForCustomer(companyId, customerId, contentType, postDefaultDimensionsForItemRequest, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.postDefaultDimensionsForCustomer']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} employeeId (v1.0) id for employee
         * @param {string} contentType (v1.0) application/json
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async postDefaultDimensionsForEmployee(companyId: string, employeeId: string, contentType: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultDimensions>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.postDefaultDimensionsForEmployee(companyId, employeeId, contentType, postDefaultDimensionsForItemRequest, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.postDefaultDimensionsForEmployee']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} itemId (v1.0) id for item
         * @param {string} contentType (v1.0) application/json
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async postDefaultDimensionsForItem(companyId: string, itemId: string, contentType: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultDimensions>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.postDefaultDimensionsForItem(companyId, itemId, contentType, postDefaultDimensionsForItemRequest, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.postDefaultDimensionsForItem']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * 
         * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {string} companyId (v1.0) id for company
         * @param {string} vendorId (v1.0) id for vendor
         * @param {string} contentType (v1.0) application/json
         * @param {PostDefaultDimensionsForItemRequest} postDefaultDimensionsForItemRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async postDefaultDimensionsForVendor(companyId: string, vendorId: string, contentType: string, postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultDimensions>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.postDefaultDimensionsForVendor(companyId, vendorId, contentType, postDefaultDimensionsForItemRequest, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DefaultDimensionsApi.postDefaultDimensionsForVendor']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
    }
};

/**
 * DefaultDimensionsApi - factory interface
 * @export
 */
export const DefaultDimensionsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = DefaultDimensionsApiFp(configuration)
    return {
        /**
         * 
         * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {DefaultDimensionsApiDeleteDefaultDimensionsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteDefaultDimensions(requestParameters: DefaultDimensionsApiDeleteDefaultDimensionsRequest, options?: RawAxiosRequestConfig): AxiosPromise<void> {
            return localVarFp.deleteDefaultDimensions(requestParameters.companyId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {DefaultDimensionsApiDeleteDefaultDimensionsForCustomerRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteDefaultDimensionsForCustomer(requestParameters: DefaultDimensionsApiDeleteDefaultDimensionsForCustomerRequest, options?: RawAxiosRequestConfig): AxiosPromise<void> {
            return localVarFp.deleteDefaultDimensionsForCustomer(requestParameters.companyId, requestParameters.customerId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {DefaultDimensionsApiDeleteDefaultDimensionsForEmployeeRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteDefaultDimensionsForEmployee(requestParameters: DefaultDimensionsApiDeleteDefaultDimensionsForEmployeeRequest, options?: RawAxiosRequestConfig): AxiosPromise<void> {
            return localVarFp.deleteDefaultDimensionsForEmployee(requestParameters.companyId, requestParameters.employeeId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {DefaultDimensionsApiDeleteDefaultDimensionsForItemRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteDefaultDimensionsForItem(requestParameters: DefaultDimensionsApiDeleteDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig): AxiosPromise<void> {
            return localVarFp.deleteDefaultDimensionsForItem(requestParameters.companyId, requestParameters.itemId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {DefaultDimensionsApiDeleteDefaultDimensionsForVendorRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteDefaultDimensionsForVendor(requestParameters: DefaultDimensionsApiDeleteDefaultDimensionsForVendorRequest, options?: RawAxiosRequestConfig): AxiosPromise<void> {
            return localVarFp.deleteDefaultDimensionsForVendor(requestParameters.companyId, requestParameters.vendorId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
         * @param {DefaultDimensionsApiGetDefaultDimensionsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDefaultDimensions(requestParameters: DefaultDimensionsApiGetDefaultDimensionsRequest, options?: RawAxiosRequestConfig): AxiosPromise<DefaultDimensions> {
            return localVarFp.getDefaultDimensions(requestParameters.companyId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.$expand, requestParameters.$select, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
         * @param {DefaultDimensionsApiGetDefaultDimensionsForCustomerRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDefaultDimensionsForCustomer(requestParameters: DefaultDimensionsApiGetDefaultDimensionsForCustomerRequest, options?: RawAxiosRequestConfig): AxiosPromise<DefaultDimensions> {
            return localVarFp.getDefaultDimensionsForCustomer(requestParameters.companyId, requestParameters.customerId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.$expand, requestParameters.$select, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
         * @param {DefaultDimensionsApiGetDefaultDimensionsForEmployeeRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDefaultDimensionsForEmployee(requestParameters: DefaultDimensionsApiGetDefaultDimensionsForEmployeeRequest, options?: RawAxiosRequestConfig): AxiosPromise<DefaultDimensions> {
            return localVarFp.getDefaultDimensionsForEmployee(requestParameters.companyId, requestParameters.employeeId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.$expand, requestParameters.$select, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
         * @param {DefaultDimensionsApiGetDefaultDimensionsForItemRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDefaultDimensionsForItem(requestParameters: DefaultDimensionsApiGetDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig): AxiosPromise<DefaultDimensions> {
            return localVarFp.getDefaultDimensionsForItem(requestParameters.companyId, requestParameters.itemId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.$expand, requestParameters.$select, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
         * @param {DefaultDimensionsApiGetDefaultDimensionsForVendorRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDefaultDimensionsForVendor(requestParameters: DefaultDimensionsApiGetDefaultDimensionsForVendorRequest, options?: RawAxiosRequestConfig): AxiosPromise<DefaultDimensions> {
            return localVarFp.getDefaultDimensionsForVendor(requestParameters.companyId, requestParameters.vendorId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.$expand, requestParameters.$select, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Returns a list of defaultDimensions
         * @param {DefaultDimensionsApiListDefaultDimensionsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listDefaultDimensions(requestParameters: DefaultDimensionsApiListDefaultDimensionsRequest, options?: RawAxiosRequestConfig): AxiosPromise<ListDefaultDimensionsForItem200Response> {
            return localVarFp.listDefaultDimensions(requestParameters.companyId, requestParameters.$top, requestParameters.$skip, requestParameters.$limit, requestParameters.$filter, requestParameters.$expand, requestParameters.$select, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Returns a list of defaultDimensions
         * @param {DefaultDimensionsApiListDefaultDimensionsForCustomerRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listDefaultDimensionsForCustomer(requestParameters: DefaultDimensionsApiListDefaultDimensionsForCustomerRequest, options?: RawAxiosRequestConfig): AxiosPromise<ListDefaultDimensionsForItem200Response> {
            return localVarFp.listDefaultDimensionsForCustomer(requestParameters.companyId, requestParameters.customerId, requestParameters.$top, requestParameters.$skip, requestParameters.$limit, requestParameters.$filter, requestParameters.$expand, requestParameters.$select, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Returns a list of defaultDimensions
         * @param {DefaultDimensionsApiListDefaultDimensionsForEmployeeRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listDefaultDimensionsForEmployee(requestParameters: DefaultDimensionsApiListDefaultDimensionsForEmployeeRequest, options?: RawAxiosRequestConfig): AxiosPromise<ListDefaultDimensionsForItem200Response> {
            return localVarFp.listDefaultDimensionsForEmployee(requestParameters.companyId, requestParameters.employeeId, requestParameters.$top, requestParameters.$skip, requestParameters.$limit, requestParameters.$filter, requestParameters.$expand, requestParameters.$select, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Returns a list of defaultDimensions
         * @param {DefaultDimensionsApiListDefaultDimensionsForItemRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listDefaultDimensionsForItem(requestParameters: DefaultDimensionsApiListDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig): AxiosPromise<ListDefaultDimensionsForItem200Response> {
            return localVarFp.listDefaultDimensionsForItem(requestParameters.companyId, requestParameters.itemId, requestParameters.$top, requestParameters.$skip, requestParameters.$limit, requestParameters.$filter, requestParameters.$expand, requestParameters.$select, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Returns a list of defaultDimensions
         * @param {DefaultDimensionsApiListDefaultDimensionsForVendorRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listDefaultDimensionsForVendor(requestParameters: DefaultDimensionsApiListDefaultDimensionsForVendorRequest, options?: RawAxiosRequestConfig): AxiosPromise<ListDefaultDimensionsForItem200Response> {
            return localVarFp.listDefaultDimensionsForVendor(requestParameters.companyId, requestParameters.vendorId, requestParameters.$top, requestParameters.$skip, requestParameters.$limit, requestParameters.$filter, requestParameters.$expand, requestParameters.$select, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {DefaultDimensionsApiPatchDefaultDimensionsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchDefaultDimensions(requestParameters: DefaultDimensionsApiPatchDefaultDimensionsRequest, options?: RawAxiosRequestConfig): AxiosPromise<DefaultDimensions> {
            return localVarFp.patchDefaultDimensions(requestParameters.companyId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.contentType, requestParameters.ifMatch, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {DefaultDimensionsApiPatchDefaultDimensionsForCustomerRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchDefaultDimensionsForCustomer(requestParameters: DefaultDimensionsApiPatchDefaultDimensionsForCustomerRequest, options?: RawAxiosRequestConfig): AxiosPromise<DefaultDimensions> {
            return localVarFp.patchDefaultDimensionsForCustomer(requestParameters.companyId, requestParameters.customerId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.contentType, requestParameters.ifMatch, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {DefaultDimensionsApiPatchDefaultDimensionsForEmployeeRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchDefaultDimensionsForEmployee(requestParameters: DefaultDimensionsApiPatchDefaultDimensionsForEmployeeRequest, options?: RawAxiosRequestConfig): AxiosPromise<DefaultDimensions> {
            return localVarFp.patchDefaultDimensionsForEmployee(requestParameters.companyId, requestParameters.employeeId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.contentType, requestParameters.ifMatch, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {DefaultDimensionsApiPatchDefaultDimensionsForItemRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchDefaultDimensionsForItem(requestParameters: DefaultDimensionsApiPatchDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig): AxiosPromise<DefaultDimensions> {
            return localVarFp.patchDefaultDimensionsForItem(requestParameters.companyId, requestParameters.itemId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.contentType, requestParameters.ifMatch, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {DefaultDimensionsApiPatchDefaultDimensionsForVendorRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchDefaultDimensionsForVendor(requestParameters: DefaultDimensionsApiPatchDefaultDimensionsForVendorRequest, options?: RawAxiosRequestConfig): AxiosPromise<DefaultDimensions> {
            return localVarFp.patchDefaultDimensionsForVendor(requestParameters.companyId, requestParameters.vendorId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.contentType, requestParameters.ifMatch, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {DefaultDimensionsApiPostDefaultDimensionsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postDefaultDimensions(requestParameters: DefaultDimensionsApiPostDefaultDimensionsRequest, options?: RawAxiosRequestConfig): AxiosPromise<DefaultDimensions> {
            return localVarFp.postDefaultDimensions(requestParameters.companyId, requestParameters.contentType, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {DefaultDimensionsApiPostDefaultDimensionsForCustomerRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postDefaultDimensionsForCustomer(requestParameters: DefaultDimensionsApiPostDefaultDimensionsForCustomerRequest, options?: RawAxiosRequestConfig): AxiosPromise<DefaultDimensions> {
            return localVarFp.postDefaultDimensionsForCustomer(requestParameters.companyId, requestParameters.customerId, requestParameters.contentType, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {DefaultDimensionsApiPostDefaultDimensionsForEmployeeRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postDefaultDimensionsForEmployee(requestParameters: DefaultDimensionsApiPostDefaultDimensionsForEmployeeRequest, options?: RawAxiosRequestConfig): AxiosPromise<DefaultDimensions> {
            return localVarFp.postDefaultDimensionsForEmployee(requestParameters.companyId, requestParameters.employeeId, requestParameters.contentType, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {DefaultDimensionsApiPostDefaultDimensionsForItemRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postDefaultDimensionsForItem(requestParameters: DefaultDimensionsApiPostDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig): AxiosPromise<DefaultDimensions> {
            return localVarFp.postDefaultDimensionsForItem(requestParameters.companyId, requestParameters.itemId, requestParameters.contentType, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
         * @param {DefaultDimensionsApiPostDefaultDimensionsForVendorRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postDefaultDimensionsForVendor(requestParameters: DefaultDimensionsApiPostDefaultDimensionsForVendorRequest, options?: RawAxiosRequestConfig): AxiosPromise<DefaultDimensions> {
            return localVarFp.postDefaultDimensionsForVendor(requestParameters.companyId, requestParameters.vendorId, requestParameters.contentType, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for deleteDefaultDimensions operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiDeleteDefaultDimensionsRequest
 */
export interface DefaultDimensionsApiDeleteDefaultDimensionsRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensions
     */
    readonly companyId: string

    /**
     * (v1.0) parentId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensions
     */
    readonly defaultDimensionsParentId: string

    /**
     * (v1.0) dimensionId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensions
     */
    readonly defaultDimensionsDimensionId: string
}

/**
 * Request parameters for deleteDefaultDimensionsForCustomer operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiDeleteDefaultDimensionsForCustomerRequest
 */
export interface DefaultDimensionsApiDeleteDefaultDimensionsForCustomerRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensionsForCustomer
     */
    readonly companyId: string

    /**
     * (v1.0) id for customer
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensionsForCustomer
     */
    readonly customerId: string

    /**
     * (v1.0) parentId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensionsForCustomer
     */
    readonly defaultDimensionsParentId: string

    /**
     * (v1.0) dimensionId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensionsForCustomer
     */
    readonly defaultDimensionsDimensionId: string
}

/**
 * Request parameters for deleteDefaultDimensionsForEmployee operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiDeleteDefaultDimensionsForEmployeeRequest
 */
export interface DefaultDimensionsApiDeleteDefaultDimensionsForEmployeeRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensionsForEmployee
     */
    readonly companyId: string

    /**
     * (v1.0) id for employee
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensionsForEmployee
     */
    readonly employeeId: string

    /**
     * (v1.0) parentId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensionsForEmployee
     */
    readonly defaultDimensionsParentId: string

    /**
     * (v1.0) dimensionId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensionsForEmployee
     */
    readonly defaultDimensionsDimensionId: string
}

/**
 * Request parameters for deleteDefaultDimensionsForItem operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiDeleteDefaultDimensionsForItemRequest
 */
export interface DefaultDimensionsApiDeleteDefaultDimensionsForItemRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensionsForItem
     */
    readonly companyId: string

    /**
     * (v1.0) id for item
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensionsForItem
     */
    readonly itemId: string

    /**
     * (v1.0) parentId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensionsForItem
     */
    readonly defaultDimensionsParentId: string

    /**
     * (v1.0) dimensionId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensionsForItem
     */
    readonly defaultDimensionsDimensionId: string
}

/**
 * Request parameters for deleteDefaultDimensionsForVendor operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiDeleteDefaultDimensionsForVendorRequest
 */
export interface DefaultDimensionsApiDeleteDefaultDimensionsForVendorRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensionsForVendor
     */
    readonly companyId: string

    /**
     * (v1.0) id for vendor
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensionsForVendor
     */
    readonly vendorId: string

    /**
     * (v1.0) parentId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensionsForVendor
     */
    readonly defaultDimensionsParentId: string

    /**
     * (v1.0) dimensionId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiDeleteDefaultDimensionsForVendor
     */
    readonly defaultDimensionsDimensionId: string
}

/**
 * Request parameters for getDefaultDimensions operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiGetDefaultDimensionsRequest
 */
export interface DefaultDimensionsApiGetDefaultDimensionsRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensions
     */
    readonly companyId: string

    /**
     * (v1.0) parentId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensions
     */
    readonly defaultDimensionsParentId: string

    /**
     * (v1.0) dimensionId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensions
     */
    readonly defaultDimensionsDimensionId: string

    /**
     * (v1.0) Entities to expand
     * @type {Array<'account' | 'dimension' | 'dimensionValue'>}
     * @memberof DefaultDimensionsApiGetDefaultDimensions
     */
    readonly $expand?: Array<GetDefaultDimensionsExpandEnum>

    /**
     * (v1.0) Selected properties to be retrieved
     * @type {Array<'parentId' | 'dimensionId' | 'dimensionCode' | 'dimensionValueId' | 'dimensionValueCode' | 'postingValidation'>}
     * @memberof DefaultDimensionsApiGetDefaultDimensions
     */
    readonly $select?: Array<GetDefaultDimensionsSelectEnum>
}

/**
 * Request parameters for getDefaultDimensionsForCustomer operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiGetDefaultDimensionsForCustomerRequest
 */
export interface DefaultDimensionsApiGetDefaultDimensionsForCustomerRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForCustomer
     */
    readonly companyId: string

    /**
     * (v1.0) id for customer
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForCustomer
     */
    readonly customerId: string

    /**
     * (v1.0) parentId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForCustomer
     */
    readonly defaultDimensionsParentId: string

    /**
     * (v1.0) dimensionId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForCustomer
     */
    readonly defaultDimensionsDimensionId: string

    /**
     * (v1.0) Entities to expand
     * @type {Array<'account' | 'dimension' | 'dimensionValue'>}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForCustomer
     */
    readonly $expand?: Array<GetDefaultDimensionsForCustomerExpandEnum>

    /**
     * (v1.0) Selected properties to be retrieved
     * @type {Array<'parentId' | 'dimensionId' | 'dimensionCode' | 'dimensionValueId' | 'dimensionValueCode' | 'postingValidation'>}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForCustomer
     */
    readonly $select?: Array<GetDefaultDimensionsForCustomerSelectEnum>
}

/**
 * Request parameters for getDefaultDimensionsForEmployee operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiGetDefaultDimensionsForEmployeeRequest
 */
export interface DefaultDimensionsApiGetDefaultDimensionsForEmployeeRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForEmployee
     */
    readonly companyId: string

    /**
     * (v1.0) id for employee
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForEmployee
     */
    readonly employeeId: string

    /**
     * (v1.0) parentId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForEmployee
     */
    readonly defaultDimensionsParentId: string

    /**
     * (v1.0) dimensionId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForEmployee
     */
    readonly defaultDimensionsDimensionId: string

    /**
     * (v1.0) Entities to expand
     * @type {Array<'account' | 'dimension' | 'dimensionValue'>}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForEmployee
     */
    readonly $expand?: Array<GetDefaultDimensionsForEmployeeExpandEnum>

    /**
     * (v1.0) Selected properties to be retrieved
     * @type {Array<'parentId' | 'dimensionId' | 'dimensionCode' | 'dimensionValueId' | 'dimensionValueCode' | 'postingValidation'>}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForEmployee
     */
    readonly $select?: Array<GetDefaultDimensionsForEmployeeSelectEnum>
}

/**
 * Request parameters for getDefaultDimensionsForItem operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiGetDefaultDimensionsForItemRequest
 */
export interface DefaultDimensionsApiGetDefaultDimensionsForItemRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForItem
     */
    readonly companyId: string

    /**
     * (v1.0) id for item
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForItem
     */
    readonly itemId: string

    /**
     * (v1.0) parentId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForItem
     */
    readonly defaultDimensionsParentId: string

    /**
     * (v1.0) dimensionId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForItem
     */
    readonly defaultDimensionsDimensionId: string

    /**
     * (v1.0) Entities to expand
     * @type {Array<'account' | 'dimension' | 'dimensionValue'>}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForItem
     */
    readonly $expand?: Array<GetDefaultDimensionsForItemExpandEnum>

    /**
     * (v1.0) Selected properties to be retrieved
     * @type {Array<'parentId' | 'dimensionId' | 'dimensionCode' | 'dimensionValueId' | 'dimensionValueCode' | 'postingValidation'>}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForItem
     */
    readonly $select?: Array<GetDefaultDimensionsForItemSelectEnum>
}

/**
 * Request parameters for getDefaultDimensionsForVendor operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiGetDefaultDimensionsForVendorRequest
 */
export interface DefaultDimensionsApiGetDefaultDimensionsForVendorRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForVendor
     */
    readonly companyId: string

    /**
     * (v1.0) id for vendor
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForVendor
     */
    readonly vendorId: string

    /**
     * (v1.0) parentId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForVendor
     */
    readonly defaultDimensionsParentId: string

    /**
     * (v1.0) dimensionId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForVendor
     */
    readonly defaultDimensionsDimensionId: string

    /**
     * (v1.0) Entities to expand
     * @type {Array<'account' | 'dimension' | 'dimensionValue'>}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForVendor
     */
    readonly $expand?: Array<GetDefaultDimensionsForVendorExpandEnum>

    /**
     * (v1.0) Selected properties to be retrieved
     * @type {Array<'parentId' | 'dimensionId' | 'dimensionCode' | 'dimensionValueId' | 'dimensionValueCode' | 'postingValidation'>}
     * @memberof DefaultDimensionsApiGetDefaultDimensionsForVendor
     */
    readonly $select?: Array<GetDefaultDimensionsForVendorSelectEnum>
}

/**
 * Request parameters for listDefaultDimensions operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiListDefaultDimensionsRequest
 */
export interface DefaultDimensionsApiListDefaultDimensionsRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiListDefaultDimensions
     */
    readonly companyId: string

    /**
     * (v1.0) Number of items to return from the top of the list
     * @type {number}
     * @memberof DefaultDimensionsApiListDefaultDimensions
     */
    readonly $top?: number

    /**
     * (v1.0) Number of items to skip from the list
     * @type {number}
     * @memberof DefaultDimensionsApiListDefaultDimensions
     */
    readonly $skip?: number

    /**
     * (v1.0) Number of items to return from the list
     * @type {number}
     * @memberof DefaultDimensionsApiListDefaultDimensions
     */
    readonly $limit?: number

    /**
     * (v1.0) Filtering expression
     * @type {string}
     * @memberof DefaultDimensionsApiListDefaultDimensions
     */
    readonly $filter?: string

    /**
     * (v1.0) Entities to expand
     * @type {Array<'account' | 'dimension' | 'dimensionValue'>}
     * @memberof DefaultDimensionsApiListDefaultDimensions
     */
    readonly $expand?: Array<ListDefaultDimensionsExpandEnum>

    /**
     * (v1.0) Selected properties to be retrieved
     * @type {Array<'parentId' | 'dimensionId' | 'dimensionCode' | 'dimensionValueId' | 'dimensionValueCode' | 'postingValidation'>}
     * @memberof DefaultDimensionsApiListDefaultDimensions
     */
    readonly $select?: Array<ListDefaultDimensionsSelectEnum>
}

/**
 * Request parameters for listDefaultDimensionsForCustomer operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiListDefaultDimensionsForCustomerRequest
 */
export interface DefaultDimensionsApiListDefaultDimensionsForCustomerRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForCustomer
     */
    readonly companyId: string

    /**
     * (v1.0) id for customer
     * @type {string}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForCustomer
     */
    readonly customerId: string

    /**
     * (v1.0) Number of items to return from the top of the list
     * @type {number}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForCustomer
     */
    readonly $top?: number

    /**
     * (v1.0) Number of items to skip from the list
     * @type {number}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForCustomer
     */
    readonly $skip?: number

    /**
     * (v1.0) Number of items to return from the list
     * @type {number}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForCustomer
     */
    readonly $limit?: number

    /**
     * (v1.0) Filtering expression
     * @type {string}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForCustomer
     */
    readonly $filter?: string

    /**
     * (v1.0) Entities to expand
     * @type {Array<'account' | 'dimension' | 'dimensionValue'>}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForCustomer
     */
    readonly $expand?: Array<ListDefaultDimensionsForCustomerExpandEnum>

    /**
     * (v1.0) Selected properties to be retrieved
     * @type {Array<'parentId' | 'dimensionId' | 'dimensionCode' | 'dimensionValueId' | 'dimensionValueCode' | 'postingValidation'>}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForCustomer
     */
    readonly $select?: Array<ListDefaultDimensionsForCustomerSelectEnum>
}

/**
 * Request parameters for listDefaultDimensionsForEmployee operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiListDefaultDimensionsForEmployeeRequest
 */
export interface DefaultDimensionsApiListDefaultDimensionsForEmployeeRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForEmployee
     */
    readonly companyId: string

    /**
     * (v1.0) id for employee
     * @type {string}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForEmployee
     */
    readonly employeeId: string

    /**
     * (v1.0) Number of items to return from the top of the list
     * @type {number}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForEmployee
     */
    readonly $top?: number

    /**
     * (v1.0) Number of items to skip from the list
     * @type {number}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForEmployee
     */
    readonly $skip?: number

    /**
     * (v1.0) Number of items to return from the list
     * @type {number}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForEmployee
     */
    readonly $limit?: number

    /**
     * (v1.0) Filtering expression
     * @type {string}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForEmployee
     */
    readonly $filter?: string

    /**
     * (v1.0) Entities to expand
     * @type {Array<'account' | 'dimension' | 'dimensionValue'>}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForEmployee
     */
    readonly $expand?: Array<ListDefaultDimensionsForEmployeeExpandEnum>

    /**
     * (v1.0) Selected properties to be retrieved
     * @type {Array<'parentId' | 'dimensionId' | 'dimensionCode' | 'dimensionValueId' | 'dimensionValueCode' | 'postingValidation'>}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForEmployee
     */
    readonly $select?: Array<ListDefaultDimensionsForEmployeeSelectEnum>
}

/**
 * Request parameters for listDefaultDimensionsForItem operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiListDefaultDimensionsForItemRequest
 */
export interface DefaultDimensionsApiListDefaultDimensionsForItemRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForItem
     */
    readonly companyId: string

    /**
     * (v1.0) id for item
     * @type {string}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForItem
     */
    readonly itemId: string

    /**
     * (v1.0) Number of items to return from the top of the list
     * @type {number}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForItem
     */
    readonly $top?: number

    /**
     * (v1.0) Number of items to skip from the list
     * @type {number}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForItem
     */
    readonly $skip?: number

    /**
     * (v1.0) Number of items to return from the list
     * @type {number}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForItem
     */
    readonly $limit?: number

    /**
     * (v1.0) Filtering expression
     * @type {string}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForItem
     */
    readonly $filter?: string

    /**
     * (v1.0) Entities to expand
     * @type {Array<'account' | 'dimension' | 'dimensionValue'>}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForItem
     */
    readonly $expand?: Array<ListDefaultDimensionsForItemExpandEnum>

    /**
     * (v1.0) Selected properties to be retrieved
     * @type {Array<'parentId' | 'dimensionId' | 'dimensionCode' | 'dimensionValueId' | 'dimensionValueCode' | 'postingValidation'>}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForItem
     */
    readonly $select?: Array<ListDefaultDimensionsForItemSelectEnum>
}

/**
 * Request parameters for listDefaultDimensionsForVendor operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiListDefaultDimensionsForVendorRequest
 */
export interface DefaultDimensionsApiListDefaultDimensionsForVendorRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForVendor
     */
    readonly companyId: string

    /**
     * (v1.0) id for vendor
     * @type {string}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForVendor
     */
    readonly vendorId: string

    /**
     * (v1.0) Number of items to return from the top of the list
     * @type {number}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForVendor
     */
    readonly $top?: number

    /**
     * (v1.0) Number of items to skip from the list
     * @type {number}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForVendor
     */
    readonly $skip?: number

    /**
     * (v1.0) Number of items to return from the list
     * @type {number}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForVendor
     */
    readonly $limit?: number

    /**
     * (v1.0) Filtering expression
     * @type {string}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForVendor
     */
    readonly $filter?: string

    /**
     * (v1.0) Entities to expand
     * @type {Array<'account' | 'dimension' | 'dimensionValue'>}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForVendor
     */
    readonly $expand?: Array<ListDefaultDimensionsForVendorExpandEnum>

    /**
     * (v1.0) Selected properties to be retrieved
     * @type {Array<'parentId' | 'dimensionId' | 'dimensionCode' | 'dimensionValueId' | 'dimensionValueCode' | 'postingValidation'>}
     * @memberof DefaultDimensionsApiListDefaultDimensionsForVendor
     */
    readonly $select?: Array<ListDefaultDimensionsForVendorSelectEnum>
}

/**
 * Request parameters for patchDefaultDimensions operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiPatchDefaultDimensionsRequest
 */
export interface DefaultDimensionsApiPatchDefaultDimensionsRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensions
     */
    readonly companyId: string

    /**
     * (v1.0) parentId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensions
     */
    readonly defaultDimensionsParentId: string

    /**
     * (v1.0) dimensionId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensions
     */
    readonly defaultDimensionsDimensionId: string

    /**
     * (v1.0) application/json
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensions
     */
    readonly contentType: string

    /**
     * (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensions
     */
    readonly ifMatch: string

    /**
     * 
     * @type {PostDefaultDimensionsForItemRequest}
     * @memberof DefaultDimensionsApiPatchDefaultDimensions
     */
    readonly postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest
}

/**
 * Request parameters for patchDefaultDimensionsForCustomer operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiPatchDefaultDimensionsForCustomerRequest
 */
export interface DefaultDimensionsApiPatchDefaultDimensionsForCustomerRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForCustomer
     */
    readonly companyId: string

    /**
     * (v1.0) id for customer
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForCustomer
     */
    readonly customerId: string

    /**
     * (v1.0) parentId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForCustomer
     */
    readonly defaultDimensionsParentId: string

    /**
     * (v1.0) dimensionId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForCustomer
     */
    readonly defaultDimensionsDimensionId: string

    /**
     * (v1.0) application/json
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForCustomer
     */
    readonly contentType: string

    /**
     * (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForCustomer
     */
    readonly ifMatch: string

    /**
     * 
     * @type {PostDefaultDimensionsForItemRequest}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForCustomer
     */
    readonly postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest
}

/**
 * Request parameters for patchDefaultDimensionsForEmployee operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiPatchDefaultDimensionsForEmployeeRequest
 */
export interface DefaultDimensionsApiPatchDefaultDimensionsForEmployeeRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForEmployee
     */
    readonly companyId: string

    /**
     * (v1.0) id for employee
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForEmployee
     */
    readonly employeeId: string

    /**
     * (v1.0) parentId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForEmployee
     */
    readonly defaultDimensionsParentId: string

    /**
     * (v1.0) dimensionId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForEmployee
     */
    readonly defaultDimensionsDimensionId: string

    /**
     * (v1.0) application/json
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForEmployee
     */
    readonly contentType: string

    /**
     * (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForEmployee
     */
    readonly ifMatch: string

    /**
     * 
     * @type {PostDefaultDimensionsForItemRequest}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForEmployee
     */
    readonly postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest
}

/**
 * Request parameters for patchDefaultDimensionsForItem operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiPatchDefaultDimensionsForItemRequest
 */
export interface DefaultDimensionsApiPatchDefaultDimensionsForItemRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForItem
     */
    readonly companyId: string

    /**
     * (v1.0) id for item
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForItem
     */
    readonly itemId: string

    /**
     * (v1.0) parentId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForItem
     */
    readonly defaultDimensionsParentId: string

    /**
     * (v1.0) dimensionId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForItem
     */
    readonly defaultDimensionsDimensionId: string

    /**
     * (v1.0) application/json
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForItem
     */
    readonly contentType: string

    /**
     * (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForItem
     */
    readonly ifMatch: string

    /**
     * 
     * @type {PostDefaultDimensionsForItemRequest}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForItem
     */
    readonly postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest
}

/**
 * Request parameters for patchDefaultDimensionsForVendor operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiPatchDefaultDimensionsForVendorRequest
 */
export interface DefaultDimensionsApiPatchDefaultDimensionsForVendorRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForVendor
     */
    readonly companyId: string

    /**
     * (v1.0) id for vendor
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForVendor
     */
    readonly vendorId: string

    /**
     * (v1.0) parentId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForVendor
     */
    readonly defaultDimensionsParentId: string

    /**
     * (v1.0) dimensionId for defaultDimensions
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForVendor
     */
    readonly defaultDimensionsDimensionId: string

    /**
     * (v1.0) application/json
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForVendor
     */
    readonly contentType: string

    /**
     * (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
     * @type {string}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForVendor
     */
    readonly ifMatch: string

    /**
     * 
     * @type {PostDefaultDimensionsForItemRequest}
     * @memberof DefaultDimensionsApiPatchDefaultDimensionsForVendor
     */
    readonly postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest
}

/**
 * Request parameters for postDefaultDimensions operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiPostDefaultDimensionsRequest
 */
export interface DefaultDimensionsApiPostDefaultDimensionsRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiPostDefaultDimensions
     */
    readonly companyId: string

    /**
     * (v1.0) application/json
     * @type {string}
     * @memberof DefaultDimensionsApiPostDefaultDimensions
     */
    readonly contentType: string

    /**
     * 
     * @type {PostDefaultDimensionsForItemRequest}
     * @memberof DefaultDimensionsApiPostDefaultDimensions
     */
    readonly postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest
}

/**
 * Request parameters for postDefaultDimensionsForCustomer operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiPostDefaultDimensionsForCustomerRequest
 */
export interface DefaultDimensionsApiPostDefaultDimensionsForCustomerRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiPostDefaultDimensionsForCustomer
     */
    readonly companyId: string

    /**
     * (v1.0) id for customer
     * @type {string}
     * @memberof DefaultDimensionsApiPostDefaultDimensionsForCustomer
     */
    readonly customerId: string

    /**
     * (v1.0) application/json
     * @type {string}
     * @memberof DefaultDimensionsApiPostDefaultDimensionsForCustomer
     */
    readonly contentType: string

    /**
     * 
     * @type {PostDefaultDimensionsForItemRequest}
     * @memberof DefaultDimensionsApiPostDefaultDimensionsForCustomer
     */
    readonly postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest
}

/**
 * Request parameters for postDefaultDimensionsForEmployee operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiPostDefaultDimensionsForEmployeeRequest
 */
export interface DefaultDimensionsApiPostDefaultDimensionsForEmployeeRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiPostDefaultDimensionsForEmployee
     */
    readonly companyId: string

    /**
     * (v1.0) id for employee
     * @type {string}
     * @memberof DefaultDimensionsApiPostDefaultDimensionsForEmployee
     */
    readonly employeeId: string

    /**
     * (v1.0) application/json
     * @type {string}
     * @memberof DefaultDimensionsApiPostDefaultDimensionsForEmployee
     */
    readonly contentType: string

    /**
     * 
     * @type {PostDefaultDimensionsForItemRequest}
     * @memberof DefaultDimensionsApiPostDefaultDimensionsForEmployee
     */
    readonly postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest
}

/**
 * Request parameters for postDefaultDimensionsForItem operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiPostDefaultDimensionsForItemRequest
 */
export interface DefaultDimensionsApiPostDefaultDimensionsForItemRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiPostDefaultDimensionsForItem
     */
    readonly companyId: string

    /**
     * (v1.0) id for item
     * @type {string}
     * @memberof DefaultDimensionsApiPostDefaultDimensionsForItem
     */
    readonly itemId: string

    /**
     * (v1.0) application/json
     * @type {string}
     * @memberof DefaultDimensionsApiPostDefaultDimensionsForItem
     */
    readonly contentType: string

    /**
     * 
     * @type {PostDefaultDimensionsForItemRequest}
     * @memberof DefaultDimensionsApiPostDefaultDimensionsForItem
     */
    readonly postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest
}

/**
 * Request parameters for postDefaultDimensionsForVendor operation in DefaultDimensionsApi.
 * @export
 * @interface DefaultDimensionsApiPostDefaultDimensionsForVendorRequest
 */
export interface DefaultDimensionsApiPostDefaultDimensionsForVendorRequest {
    /**
     * (v1.0) id for company
     * @type {string}
     * @memberof DefaultDimensionsApiPostDefaultDimensionsForVendor
     */
    readonly companyId: string

    /**
     * (v1.0) id for vendor
     * @type {string}
     * @memberof DefaultDimensionsApiPostDefaultDimensionsForVendor
     */
    readonly vendorId: string

    /**
     * (v1.0) application/json
     * @type {string}
     * @memberof DefaultDimensionsApiPostDefaultDimensionsForVendor
     */
    readonly contentType: string

    /**
     * 
     * @type {PostDefaultDimensionsForItemRequest}
     * @memberof DefaultDimensionsApiPostDefaultDimensionsForVendor
     */
    readonly postDefaultDimensionsForItemRequest: PostDefaultDimensionsForItemRequest
}

/**
 * DefaultDimensionsApi - object-oriented interface
 * @export
 * @class DefaultDimensionsApi
 * @extends {BaseAPI}
 */
export class DefaultDimensionsApi extends BaseAPI {
    /**
     * 
     * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
     * @param {DefaultDimensionsApiDeleteDefaultDimensionsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public deleteDefaultDimensions(requestParameters: DefaultDimensionsApiDeleteDefaultDimensionsRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).deleteDefaultDimensions(requestParameters.companyId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
     * @param {DefaultDimensionsApiDeleteDefaultDimensionsForCustomerRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public deleteDefaultDimensionsForCustomer(requestParameters: DefaultDimensionsApiDeleteDefaultDimensionsForCustomerRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).deleteDefaultDimensionsForCustomer(requestParameters.companyId, requestParameters.customerId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
     * @param {DefaultDimensionsApiDeleteDefaultDimensionsForEmployeeRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public deleteDefaultDimensionsForEmployee(requestParameters: DefaultDimensionsApiDeleteDefaultDimensionsForEmployeeRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).deleteDefaultDimensionsForEmployee(requestParameters.companyId, requestParameters.employeeId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
     * @param {DefaultDimensionsApiDeleteDefaultDimensionsForItemRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public deleteDefaultDimensionsForItem(requestParameters: DefaultDimensionsApiDeleteDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).deleteDefaultDimensionsForItem(requestParameters.companyId, requestParameters.itemId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Deletes an object of type defaultDimensions in Dynamics 365 Business Central
     * @param {DefaultDimensionsApiDeleteDefaultDimensionsForVendorRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public deleteDefaultDimensionsForVendor(requestParameters: DefaultDimensionsApiDeleteDefaultDimensionsForVendorRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).deleteDefaultDimensionsForVendor(requestParameters.companyId, requestParameters.vendorId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
     * @param {DefaultDimensionsApiGetDefaultDimensionsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public getDefaultDimensions(requestParameters: DefaultDimensionsApiGetDefaultDimensionsRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).getDefaultDimensions(requestParameters.companyId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.$expand, requestParameters.$select, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
     * @param {DefaultDimensionsApiGetDefaultDimensionsForCustomerRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public getDefaultDimensionsForCustomer(requestParameters: DefaultDimensionsApiGetDefaultDimensionsForCustomerRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).getDefaultDimensionsForCustomer(requestParameters.companyId, requestParameters.customerId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.$expand, requestParameters.$select, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
     * @param {DefaultDimensionsApiGetDefaultDimensionsForEmployeeRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public getDefaultDimensionsForEmployee(requestParameters: DefaultDimensionsApiGetDefaultDimensionsForEmployeeRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).getDefaultDimensionsForEmployee(requestParameters.companyId, requestParameters.employeeId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.$expand, requestParameters.$select, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
     * @param {DefaultDimensionsApiGetDefaultDimensionsForItemRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public getDefaultDimensionsForItem(requestParameters: DefaultDimensionsApiGetDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).getDefaultDimensionsForItem(requestParameters.companyId, requestParameters.itemId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.$expand, requestParameters.$select, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.
     * @param {DefaultDimensionsApiGetDefaultDimensionsForVendorRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public getDefaultDimensionsForVendor(requestParameters: DefaultDimensionsApiGetDefaultDimensionsForVendorRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).getDefaultDimensionsForVendor(requestParameters.companyId, requestParameters.vendorId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.$expand, requestParameters.$select, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Returns a list of defaultDimensions
     * @param {DefaultDimensionsApiListDefaultDimensionsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public listDefaultDimensions(requestParameters: DefaultDimensionsApiListDefaultDimensionsRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).listDefaultDimensions(requestParameters.companyId, requestParameters.$top, requestParameters.$skip, requestParameters.$limit, requestParameters.$filter, requestParameters.$expand, requestParameters.$select, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Returns a list of defaultDimensions
     * @param {DefaultDimensionsApiListDefaultDimensionsForCustomerRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public listDefaultDimensionsForCustomer(requestParameters: DefaultDimensionsApiListDefaultDimensionsForCustomerRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).listDefaultDimensionsForCustomer(requestParameters.companyId, requestParameters.customerId, requestParameters.$top, requestParameters.$skip, requestParameters.$limit, requestParameters.$filter, requestParameters.$expand, requestParameters.$select, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Returns a list of defaultDimensions
     * @param {DefaultDimensionsApiListDefaultDimensionsForEmployeeRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public listDefaultDimensionsForEmployee(requestParameters: DefaultDimensionsApiListDefaultDimensionsForEmployeeRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).listDefaultDimensionsForEmployee(requestParameters.companyId, requestParameters.employeeId, requestParameters.$top, requestParameters.$skip, requestParameters.$limit, requestParameters.$filter, requestParameters.$expand, requestParameters.$select, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Returns a list of defaultDimensions
     * @param {DefaultDimensionsApiListDefaultDimensionsForItemRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public listDefaultDimensionsForItem(requestParameters: DefaultDimensionsApiListDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).listDefaultDimensionsForItem(requestParameters.companyId, requestParameters.itemId, requestParameters.$top, requestParameters.$skip, requestParameters.$limit, requestParameters.$filter, requestParameters.$expand, requestParameters.$select, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Returns a list of defaultDimensions
     * @param {DefaultDimensionsApiListDefaultDimensionsForVendorRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public listDefaultDimensionsForVendor(requestParameters: DefaultDimensionsApiListDefaultDimensionsForVendorRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).listDefaultDimensionsForVendor(requestParameters.companyId, requestParameters.vendorId, requestParameters.$top, requestParameters.$skip, requestParameters.$limit, requestParameters.$filter, requestParameters.$expand, requestParameters.$select, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
     * @param {DefaultDimensionsApiPatchDefaultDimensionsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public patchDefaultDimensions(requestParameters: DefaultDimensionsApiPatchDefaultDimensionsRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).patchDefaultDimensions(requestParameters.companyId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.contentType, requestParameters.ifMatch, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
     * @param {DefaultDimensionsApiPatchDefaultDimensionsForCustomerRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public patchDefaultDimensionsForCustomer(requestParameters: DefaultDimensionsApiPatchDefaultDimensionsForCustomerRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).patchDefaultDimensionsForCustomer(requestParameters.companyId, requestParameters.customerId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.contentType, requestParameters.ifMatch, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
     * @param {DefaultDimensionsApiPatchDefaultDimensionsForEmployeeRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public patchDefaultDimensionsForEmployee(requestParameters: DefaultDimensionsApiPatchDefaultDimensionsForEmployeeRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).patchDefaultDimensionsForEmployee(requestParameters.companyId, requestParameters.employeeId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.contentType, requestParameters.ifMatch, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
     * @param {DefaultDimensionsApiPatchDefaultDimensionsForItemRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public patchDefaultDimensionsForItem(requestParameters: DefaultDimensionsApiPatchDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).patchDefaultDimensionsForItem(requestParameters.companyId, requestParameters.itemId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.contentType, requestParameters.ifMatch, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Updates an object of type defaultDimensions in Dynamics 365 Business Central
     * @param {DefaultDimensionsApiPatchDefaultDimensionsForVendorRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public patchDefaultDimensionsForVendor(requestParameters: DefaultDimensionsApiPatchDefaultDimensionsForVendorRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).patchDefaultDimensionsForVendor(requestParameters.companyId, requestParameters.vendorId, requestParameters.defaultDimensionsParentId, requestParameters.defaultDimensionsDimensionId, requestParameters.contentType, requestParameters.ifMatch, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
     * @param {DefaultDimensionsApiPostDefaultDimensionsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public postDefaultDimensions(requestParameters: DefaultDimensionsApiPostDefaultDimensionsRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).postDefaultDimensions(requestParameters.companyId, requestParameters.contentType, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
     * @param {DefaultDimensionsApiPostDefaultDimensionsForCustomerRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public postDefaultDimensionsForCustomer(requestParameters: DefaultDimensionsApiPostDefaultDimensionsForCustomerRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).postDefaultDimensionsForCustomer(requestParameters.companyId, requestParameters.customerId, requestParameters.contentType, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
     * @param {DefaultDimensionsApiPostDefaultDimensionsForEmployeeRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public postDefaultDimensionsForEmployee(requestParameters: DefaultDimensionsApiPostDefaultDimensionsForEmployeeRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).postDefaultDimensionsForEmployee(requestParameters.companyId, requestParameters.employeeId, requestParameters.contentType, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
     * @param {DefaultDimensionsApiPostDefaultDimensionsForItemRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public postDefaultDimensionsForItem(requestParameters: DefaultDimensionsApiPostDefaultDimensionsForItemRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).postDefaultDimensionsForItem(requestParameters.companyId, requestParameters.itemId, requestParameters.contentType, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Creates an object of type defaultDimensions in Dynamics 365 Business Central
     * @param {DefaultDimensionsApiPostDefaultDimensionsForVendorRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultDimensionsApi
     */
    public postDefaultDimensionsForVendor(requestParameters: DefaultDimensionsApiPostDefaultDimensionsForVendorRequest, options?: RawAxiosRequestConfig) {
        return DefaultDimensionsApiFp(this.configuration).postDefaultDimensionsForVendor(requestParameters.companyId, requestParameters.vendorId, requestParameters.contentType, requestParameters.postDefaultDimensionsForItemRequest, options).then((request) => request(this.axios, this.basePath));
    }
}

/**
 * @export
 */
export const GetDefaultDimensionsExpandEnum = {
    Account: 'account',
    Dimension: 'dimension',
    DimensionValue: 'dimensionValue'
} as const;
export type GetDefaultDimensionsExpandEnum = typeof GetDefaultDimensionsExpandEnum[keyof typeof GetDefaultDimensionsExpandEnum];
/**
 * @export
 */
export const GetDefaultDimensionsSelectEnum = {
    ParentId: 'parentId',
    DimensionId: 'dimensionId',
    DimensionCode: 'dimensionCode',
    DimensionValueId: 'dimensionValueId',
    DimensionValueCode: 'dimensionValueCode',
    PostingValidation: 'postingValidation'
} as const;
export type GetDefaultDimensionsSelectEnum = typeof GetDefaultDimensionsSelectEnum[keyof typeof GetDefaultDimensionsSelectEnum];
/**
 * @export
 */
export const GetDefaultDimensionsForCustomerExpandEnum = {
    Account: 'account',
    Dimension: 'dimension',
    DimensionValue: 'dimensionValue'
} as const;
export type GetDefaultDimensionsForCustomerExpandEnum = typeof GetDefaultDimensionsForCustomerExpandEnum[keyof typeof GetDefaultDimensionsForCustomerExpandEnum];
/**
 * @export
 */
export const GetDefaultDimensionsForCustomerSelectEnum = {
    ParentId: 'parentId',
    DimensionId: 'dimensionId',
    DimensionCode: 'dimensionCode',
    DimensionValueId: 'dimensionValueId',
    DimensionValueCode: 'dimensionValueCode',
    PostingValidation: 'postingValidation'
} as const;
export type GetDefaultDimensionsForCustomerSelectEnum = typeof GetDefaultDimensionsForCustomerSelectEnum[keyof typeof GetDefaultDimensionsForCustomerSelectEnum];
/**
 * @export
 */
export const GetDefaultDimensionsForEmployeeExpandEnum = {
    Account: 'account',
    Dimension: 'dimension',
    DimensionValue: 'dimensionValue'
} as const;
export type GetDefaultDimensionsForEmployeeExpandEnum = typeof GetDefaultDimensionsForEmployeeExpandEnum[keyof typeof GetDefaultDimensionsForEmployeeExpandEnum];
/**
 * @export
 */
export const GetDefaultDimensionsForEmployeeSelectEnum = {
    ParentId: 'parentId',
    DimensionId: 'dimensionId',
    DimensionCode: 'dimensionCode',
    DimensionValueId: 'dimensionValueId',
    DimensionValueCode: 'dimensionValueCode',
    PostingValidation: 'postingValidation'
} as const;
export type GetDefaultDimensionsForEmployeeSelectEnum = typeof GetDefaultDimensionsForEmployeeSelectEnum[keyof typeof GetDefaultDimensionsForEmployeeSelectEnum];
/**
 * @export
 */
export const GetDefaultDimensionsForItemExpandEnum = {
    Account: 'account',
    Dimension: 'dimension',
    DimensionValue: 'dimensionValue'
} as const;
export type GetDefaultDimensionsForItemExpandEnum = typeof GetDefaultDimensionsForItemExpandEnum[keyof typeof GetDefaultDimensionsForItemExpandEnum];
/**
 * @export
 */
export const GetDefaultDimensionsForItemSelectEnum = {
    ParentId: 'parentId',
    DimensionId: 'dimensionId',
    DimensionCode: 'dimensionCode',
    DimensionValueId: 'dimensionValueId',
    DimensionValueCode: 'dimensionValueCode',
    PostingValidation: 'postingValidation'
} as const;
export type GetDefaultDimensionsForItemSelectEnum = typeof GetDefaultDimensionsForItemSelectEnum[keyof typeof GetDefaultDimensionsForItemSelectEnum];
/**
 * @export
 */
export const GetDefaultDimensionsForVendorExpandEnum = {
    Account: 'account',
    Dimension: 'dimension',
    DimensionValue: 'dimensionValue'
} as const;
export type GetDefaultDimensionsForVendorExpandEnum = typeof GetDefaultDimensionsForVendorExpandEnum[keyof typeof GetDefaultDimensionsForVendorExpandEnum];
/**
 * @export
 */
export const GetDefaultDimensionsForVendorSelectEnum = {
    ParentId: 'parentId',
    DimensionId: 'dimensionId',
    DimensionCode: 'dimensionCode',
    DimensionValueId: 'dimensionValueId',
    DimensionValueCode: 'dimensionValueCode',
    PostingValidation: 'postingValidation'
} as const;
export type GetDefaultDimensionsForVendorSelectEnum = typeof GetDefaultDimensionsForVendorSelectEnum[keyof typeof GetDefaultDimensionsForVendorSelectEnum];
/**
 * @export
 */
export const ListDefaultDimensionsExpandEnum = {
    Account: 'account',
    Dimension: 'dimension',
    DimensionValue: 'dimensionValue'
} as const;
export type ListDefaultDimensionsExpandEnum = typeof ListDefaultDimensionsExpandEnum[keyof typeof ListDefaultDimensionsExpandEnum];
/**
 * @export
 */
export const ListDefaultDimensionsSelectEnum = {
    ParentId: 'parentId',
    DimensionId: 'dimensionId',
    DimensionCode: 'dimensionCode',
    DimensionValueId: 'dimensionValueId',
    DimensionValueCode: 'dimensionValueCode',
    PostingValidation: 'postingValidation'
} as const;
export type ListDefaultDimensionsSelectEnum = typeof ListDefaultDimensionsSelectEnum[keyof typeof ListDefaultDimensionsSelectEnum];
/**
 * @export
 */
export const ListDefaultDimensionsForCustomerExpandEnum = {
    Account: 'account',
    Dimension: 'dimension',
    DimensionValue: 'dimensionValue'
} as const;
export type ListDefaultDimensionsForCustomerExpandEnum = typeof ListDefaultDimensionsForCustomerExpandEnum[keyof typeof ListDefaultDimensionsForCustomerExpandEnum];
/**
 * @export
 */
export const ListDefaultDimensionsForCustomerSelectEnum = {
    ParentId: 'parentId',
    DimensionId: 'dimensionId',
    DimensionCode: 'dimensionCode',
    DimensionValueId: 'dimensionValueId',
    DimensionValueCode: 'dimensionValueCode',
    PostingValidation: 'postingValidation'
} as const;
export type ListDefaultDimensionsForCustomerSelectEnum = typeof ListDefaultDimensionsForCustomerSelectEnum[keyof typeof ListDefaultDimensionsForCustomerSelectEnum];
/**
 * @export
 */
export const ListDefaultDimensionsForEmployeeExpandEnum = {
    Account: 'account',
    Dimension: 'dimension',
    DimensionValue: 'dimensionValue'
} as const;
export type ListDefaultDimensionsForEmployeeExpandEnum = typeof ListDefaultDimensionsForEmployeeExpandEnum[keyof typeof ListDefaultDimensionsForEmployeeExpandEnum];
/**
 * @export
 */
export const ListDefaultDimensionsForEmployeeSelectEnum = {
    ParentId: 'parentId',
    DimensionId: 'dimensionId',
    DimensionCode: 'dimensionCode',
    DimensionValueId: 'dimensionValueId',
    DimensionValueCode: 'dimensionValueCode',
    PostingValidation: 'postingValidation'
} as const;
export type ListDefaultDimensionsForEmployeeSelectEnum = typeof ListDefaultDimensionsForEmployeeSelectEnum[keyof typeof ListDefaultDimensionsForEmployeeSelectEnum];
/**
 * @export
 */
export const ListDefaultDimensionsForItemExpandEnum = {
    Account: 'account',
    Dimension: 'dimension',
    DimensionValue: 'dimensionValue'
} as const;
export type ListDefaultDimensionsForItemExpandEnum = typeof ListDefaultDimensionsForItemExpandEnum[keyof typeof ListDefaultDimensionsForItemExpandEnum];
/**
 * @export
 */
export const ListDefaultDimensionsForItemSelectEnum = {
    ParentId: 'parentId',
    DimensionId: 'dimensionId',
    DimensionCode: 'dimensionCode',
    DimensionValueId: 'dimensionValueId',
    DimensionValueCode: 'dimensionValueCode',
    PostingValidation: 'postingValidation'
} as const;
export type ListDefaultDimensionsForItemSelectEnum = typeof ListDefaultDimensionsForItemSelectEnum[keyof typeof ListDefaultDimensionsForItemSelectEnum];
/**
 * @export
 */
export const ListDefaultDimensionsForVendorExpandEnum = {
    Account: 'account',
    Dimension: 'dimension',
    DimensionValue: 'dimensionValue'
} as const;
export type ListDefaultDimensionsForVendorExpandEnum = typeof ListDefaultDimensionsForVendorExpandEnum[keyof typeof ListDefaultDimensionsForVendorExpandEnum];
/**
 * @export
 */
export const ListDefaultDimensionsForVendorSelectEnum = {
    ParentId: 'parentId',
    DimensionId: 'dimensionId',
    DimensionCode: 'dimensionCode',
    DimensionValueId: 'dimensionValueId',
    DimensionValueCode: 'dimensionValueCode',
    PostingValidation: 'postingValidation'
} as const;
export type ListDefaultDimensionsForVendorSelectEnum = typeof ListDefaultDimensionsForVendorSelectEnum[keyof typeof ListDefaultDimensionsForVendorSelectEnum];
